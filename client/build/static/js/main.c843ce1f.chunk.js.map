{"version":3,"sources":["Axios.js","setAuthToken.js","actions/index.js","styles/ourStyles.js","components/auth/signUp.js","components/auth/signIn.js","components/Post.js","components/account/Forgot.js","components/Home.js","components/Editable.js","components/PostItem.js","components/PostList.js","components/Posts.js","components/account/Users.js","components/account/dashBoard.js","components/account/updatePassword.js","components/account/ResetPassword.js","components/layout/Navbar.js","App.js","serviceWorker.js","reducers/users.js","reducers/posts.js","reducers/account.js","reducers/index.js","index.js"],"names":["AxiosInstance","Axios","create","baseURL","process","withCredentials","headers","Content-Type","Accept","interceptors","response","use","setAuthToken","token","defaults","common","UpdatePost","post","dispatch","getState","put","concat","id","title","then","type","history","push","ourStyles","theme","root","flexGrow","padding","paper","spacing","unit","textAlign","color","palette","text","secondary","chip","margin","button","marginLeft","display","box","width","rightToolbar","textDecoration","a","signIn","signUp","rightt","marginRight","navRoot","menuButton","state","formData","username","password","passwordConf","email","passErr","regSuccess","handleChange","e","preventDefault","_this","setState","Object","objectSpread","defineProperty","target","name","value","handleSubmit","creds","props","register","_this$props","this","isAuthenticated","classes","react_default","createElement","Redirect","to","Grid_default","justify","container","item","xs","sm","md","className","error","style","onSubmit","TextField_default","label","onChange","variant","Button_default","m","Component","compose","connect","user","getToken","authError","res","data","localStorage","setItem","console","log","catch","err","withStyles","MyLink","Link","assign","loggedEmail","loginError","myToken","userLoggedIn","emailBlank","passwordBlank","emailInvalid","passwordInValid","logIn","fullWidth","component","Post","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","postContent","newPost","userId","bind","assertThisInitialized","multiline","rows","defaultValue","withRouter","postError","req","post_content","Styles","myPaper","wrapper","textF","Forgot","event","sendEmail","Forget","_this$state","messageFromServer","showNullError","showError","placeholder","account","Home","componentWillMount","fetchData","fetch","method","mode","Paper_default","Chip_default","clickable","onClick","avatar","Avatar_default","alt","src","href","redirectTo","Editable","editField","editChange","required","PostItem","onUpdate","myTitle","disabled","removePost","createdAt","editForm","isEditing","postUpdate","Typography_default","components_Editable","moment","calendar","PostList","DeletePost","formEditing","isEditingId","_this2","posts","map","i","key","components_PostItem","Posts","loading","GetPosts","reduxPosts","myPosts","components_PostList","get","Users","getUsers","asyncToGenerator","regenerator_default","mark","_callee","url","json","wrap","_context","prev","next","sent","users","stop","Dashboard","first_name","last_name","isLoading","deleted","fontSize","pageTitle","updatePassword","accessString","getItem","loadingUser","axios","Authorization","message","updated","params","match","AppBar_default","ResetPassword","updatePass","confirmPassword","update","resetPasswordToken","_this$state2","Reset","_ref2","_callee2","_context2","_x3","apply","arguments","createBrowserHistory","forceRefresh","logout","status","removeItem","githubAuth","_ref","BrowserRouter","position","navbar","Toolbar_default","classcolor","Route","exact","path","App","auth","decoded","jwt_decode","setCurrentUser","layout_Navbar","owl","getUser","_x","_x2","payload","Boolean","window","location","hostname","initialState","redirectPath","errorMessage","rootReducer","combineReducers","length","undefined","action","filter","createMuiTheme","primary","light","main","store","applyMiddleware","thunk","createStore","createStoreWithMiddleware","ReactDOM","render","es","styles","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c843ce1f.chunk.js","sourcesContent":["import Axios from 'axios'\n\nlet AxiosInstance = Axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  withCredentials: true,\n  headers : {\n    'Content-Type' : 'application/json',\n    'Accept' : 'application/json',\n  }\n\n})\n\n\n\nAxiosInstance.interceptors.response.use(function(response) {\n  // const token = localStorage.getItem('auth');\n  // response.headers.Authorization =  token ? `Bearer ${token}` : '';\n  // console.log(token);\n  return response;\n})\n\nexport default AxiosInstance\n\n\n","import Axios from './Axios';\n\nconst setAuthToken = token => {\n    if (token) {\n      // Apply to every request\n        Axios.defaults.headers.common['Authorization'] = token;\n    } else {\n      // Delete auth header\n        delete Axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport default setAuthToken;","import axios from 'axios';\nimport { history } from '../components/layout/Navbar';\nimport Axios from '../Axios';\n\nimport setAuthToken from '../setAuthToken';\nexport const SET_USER = \"SET_USER\";\nexport const LOG_FAIL = \"LOG_FAIL\";\nexport const REG_SUC = \"REG_SUCCESS\";\nexport const REG_FAIL = \"REG_FAIL\";\nexport const POST_SUCC = \"POST_SUCC\";\nexport const POST_FAIL = \"POST_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\nexport const FORGOT = \"FORGOT\";\nexport const FORGOT_ERR = \"FORGET_ERR\";\nexport const RESET = \"RESET\";\nexport const RESET_FAIL = \"RESET_FAIL\";\nexport const UPDATEPASS = \"UPDATEPASS\";\nexport const UPDATEPASS_FAIL = \"UPDATEPASS_FAIL\";\nexport const GET_USER = \"GET_USER\";\nexport const GET_CURRENT_USER = \"GET_CURRENT_USER\";\nexport const DELETE_POST = \"DELETE_POST\"\nexport const EDIT_POST = \"EDIT_POST\"\nexport const GET_POSTS = \"GET_POSTS\";\nexport const SET_POSTS = \"SET_POSTS\";\nexport const UPDATE_POST = \"UPDATE_POST\";\n// Were using a custom Axios because the base url is consistent with the express server port 8000.\n// if we used \"axios\" it would use port:8001, which is consistent with the express server.\nexport const logIn =  (user) => { \n    return (dispatch) => {\n        Axios.post('/api/users/loginUser',{\n            username: user.username,\n            password: user.password,\n        }).then( (res) => {\n            const token = res.data.token;\n            localStorage.setItem('auth', token);\n            setAuthToken(token);\n            history.push('/dashboard');\n            dispatch({type: SET_USER, user});\n        }).catch((err)=> {\n            dispatch({type:  LOG_FAIL, err});\n            console.log(err.response.data); // not even showing err console.\n        })\n    }\n}\n\nexport const GetPosts = () => {\n    return (dispatch, getState) => {\n        return Axios.get('/api/posts/myPosts')\n            .then( (res) => {\n                 const data = res.data\n                 \n                 console.log(data); // logs data and i can see an array \n              \n                 dispatch({type: GET_POSTS, data})\n             })\n       \n    }\n}\nexport const DeletePost =  (id) => { \n    return (dispatch, getState) => {\n       return Axios.post(`/api/posts/delete/${id}`)\n            .then( () => {\n                // we will pass id to the reducer, it will be refered to as action.id\n                dispatch({type: DELETE_POST, id});\n            });\n    }\n}\n\n\nexport const UpdatePost =  (post) => {\n    // we will use post, to avoid using 2 paramters, post.id and post.title \n    return (dispatch, getState) => {\n       return Axios.put(`/api/posts/edit/${post.id}`, {\n        // we need to know what were updating in this case where updating\n            title: post.title,\n         }).then( () => {\n                dispatch({type: UPDATE_POST, post});\n                history.push('/posts');\n            });\n    }\n}\n\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: GET_USER,\n        payload: decoded\n    }; \n};\nexport const register = (user) => { \n    return (dispatch) => {\n        Axios.post('/api/users/new', {\n            username: user.username,\n            password: user.password,\n            email: user.email \n        }).then( (res) => {\n            // signs user in once registered\n            const token = res.data.token;\n            localStorage.setItem('auth', token);\n            setAuthToken(token);\n            console.log(res.data);\n            history.push('/dashboard');\n            dispatch({type: REG_SUC, user});\n        }).catch((err)=> {\n            dispatch({type:  REG_FAIL, err});\n            console.log(err.response.data); // shows console.log for this though.\n        })\n    }\n}\nexport const getUser = () => {\n    return async (dispatch, getState) => {\n      const url = await Axios.get('/api/users/current_user', {\n          withCredentials: 'same-origin'\n      });\n      const response = url;\n      const data = response.data.auth;\n      console.log(data);\n      localStorage.setItem('myAuth', data)\n      dispatch({type: GET_CURRENT_USER, data})\n    }\n}\nexport const newPost = (post, req) => { \n    return (dispatch) => {\n        Axios.post('/api/posts/newPost' ,{\n            title: post.title,\n            post_content: post.postContent\n        }).then( (res) => {\n            // console.log('success')\n            history.push('/Posts');\n            dispatch({type: POST_SUCC, post});\n        }).catch((err)=> {\n            dispatch({type:  POST_FAIL, err});\n            console.log(err.response.data); // shows console.log for this though.\n        })\n    }\n}\nexport const Forget = (creds)  => {\n    return  (dispatch) =>{\n       Axios.post('/api/users/forgotPassword',{\n            email: creds.email\n        }).then(response => {\n            console.log(creds.email);\n            console.log(response.data);\n            if (response.data === 'recovery email sent') {\n                 dispatch({type:FORGOT, creds});     \n            }\n         }).catch(err => {\n            console.log(err.response.data);\n            if (err.response.data === 'email not in db') {\n                dispatch({type:FORGOT_ERR, err});  \n            }\n         });\n    }\n}\nexport const updatePass = (creds)  => {\n    return  (dispatch) =>{\n        Axios.put('/api/users/updatePasswordViaEmail', {\n            username: creds.username,\n            password: creds.password,\n        }).then(response => {\n            // console.log(creds.username);\n            console.log(response);\n            dispatch({type:UPDATEPASS, creds});            \n         }).catch(err => {\n            dispatch({type:UPDATEPASS_FAIL, err});       \n         });\n    }\n}\nexport const Reset = () => {\n    return async (dispatch) =>{\n        await Axios\n            .get('/api/users/reset', {\n                params: {\n                    resetPasswordToken: this.props.match.params.token,\n                },\n            })\n            .then(response => {\n                console.log(response);\n                if (response.data.message === 'password reset link a-ok') {\n                    dispatch({ type: RESET});\n                }\n              })\n              .catch(err => {\n                console.log(err.response.data);\n                dispatch({ type: RESET_FAIL, err});\n              });\n    }\n}\n","const ourStyles = theme => ({\n    root: {\n        flexGrow: 1,\n        padding: 10\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary\n    },\n    chip: {\n        margin: theme.spacing.unit\n    },\n    button: {\n        marginLeft: 10,\n        margin: 0,\n        flexGrow: 1,\n        display:'inline-block',\n      \n    },\n    box:{\n        width:'500px'\n    },\n    rightToolbar: {\n        color: '#fff',\n        textDecoration: 'none',\n        a: {\n            color: '#fff'\n\n        }\n    },\n    signIn:{\n        margin:'40px',\n        padding:0,\n        flexGrow: 1,\n    },\n    signUp:{\n        margin:'40px',\n        padding:0,\n        flexGrow: 1,\n       \n\n    },\n    rightt: {\n        marginLeft: 'auto',\n        marginRight: 24\n    },\n    navRoot: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: 16,\n        marginLeft: -12\n    }\n    \n});\n\nexport default ourStyles;","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {connect} from 'react-redux';\nimport {withStyles} from '@material-ui/core/styles';\nimport {register} from '../../actions/';\nimport {Redirect, withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\nimport ourStyles from '../../styles/ourStyles';\nclass signUp extends Component {\n        state = {\n            formData: {\n                username: \"\",\n                password: \"\",\n                passwordConf: \"\",\n                email: \"\"\n            },\n            passErr: \"\",\n            regSuccess: false\n        }\n  \n    handleChange = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        this.setState({\n            formData: {\n                ...formData,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        const {username, email, password, passwordConf} = formData;\n        this.setState({\n            username: this.state.username,\n            password: this.state.password,\n            passwordConf: this.state.passwordConf,\n            email: this.state.email\n        });\n        const creds = {\n            username,\n            email,\n            password\n        }\n        if (password === passwordConf) {\n            this.props.register(creds);\n        } else {\n            this.setState({passErr: \"Passwords Don't Match\"})\n        }\n    }\n    render() {\n        const {isAuthenticated, classes} = this.props\n        if (isAuthenticated) {\n            return <Redirect to='/dashboard'/>\n        }\n        return (\n            <Grid justify=\"center\" container >\n                <Grid item xs={12} sm={10} md={5} >\n                    <div className={classes.signUp}>\n                        {this.props.error && (\n                            <div\n                                style={{\n                                color: 'red'\n                            }}>\n                                {this.props.error}\n                            </div>\n                        )}\n                        {this.state.passErr && (\n                            <div\n                                style={{\n                                color: 'red'\n                            }}>\n                                {this.state.passErr}\n                            </div>\n                        )}\n                        <h1>Sign Up</h1>\n                        <form onSubmit={this.handleSubmit}>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Username\"\n                                    style={{width: '100%' }}\n                                    name=\"username\"\n                                    value={this.state.username}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Email\"\n                                    className=\"\"\n                                    style={{width: '100%' }}\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    style={{width: '100%' }}\n                                    className=\"\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Confirm Password\"\n                                    name=\"passwordConf\"\n                                    type=\"password\"\n                                    style={{width: '100%' }}\n                                    className=\"\"\n                                    value={this.state.passwordConf}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <Button m={2}variant=\"outlined\" color=\"primary\" type=\"submit\">\n                                    Sign Up\n                                </Button>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, \n    isAuthenticated: state.user.isAuthenticated, \n    error: state.user.authError\n})\nconst mapDispatchToProps = (dispatch) => ({\n    register: (user) => dispatch(register(user))\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(signUp);","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport {withStyles} from '@material-ui/core/styles';\n// import axios from 'axios';\nimport {withRouter, Redirect} from 'react-router-dom'\n// import { history } from '../components/Navbar';\nimport {connect} from 'react-redux';\nimport {logIn} from '../../actions/';\nimport {compose} from 'redux';\nimport {Link} from 'react-router-dom';\nimport ourStyles from '../../styles/ourStyles';\nconst MyLink = props => <Link to=\"/Forgot\" {...props}/>\nclass signIn extends Component {\n       state = {\n            formData: {\n                username: \"\",\n                password: \"\"\n            },\n            loggedEmail: \"\",\n            loginError: \"\",\n            myToken: \"\",\n            userLoggedIn: false,\n            emailBlank: true,\n            passwordBlank: true,\n            emailInvalid: false,\n            passwordInValid: false,\n            // token:localStorage.getItem('JWT')\n        }\n    \n    handleChange = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        this.setState({\n            formData: {\n                ...formData,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        const {username, password} = formData;\n        const creds = {\n            username,\n            password\n        }\n        this\n            .props\n            .logIn(creds);\n        console.log(creds);\n    }\n    render() {\n        const {classes} = this.props;\n        if (this.props.isAuthenticated) {\n            return (<Redirect to=\"/dashboard\"/>);\n        }\n        return (\n        <div className={classes.signIn}>\n            <Grid justify=\"center\"  container >\n                <Grid item xs={12} sm={'auto'} md={4} >   \n                        {this.props.error && (\n                            <div\n                                style={{\n                                color: 'red'\n                            }}>\n                                {this.props.error}\n                            </div>\n                        )}\n                        <h1>Sign In</h1>\n                        <form onSubmit={this.handleSubmit}>\n                                <TextField\n                                    id=\"outlined-name2\"\n                                    label=\"Username\"\n                                    className=\"\"\n                                    fullWidth\n                                    name=\"username\"\n                                    value={this.state.username}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    fullWidth\n                                    className=\"\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n                                    Log In\n                                </Button>\n                                <Button\n                                    component={MyLink}\n                                    variant=\"outlined\"\n                                    type=\"submit\"\n                                    className={classes.button}>\n                                    Forgot Password ?\n                                </Button>\n                        </form>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, \n    isAuthenticated: state.user.isAuthenticated,\n    error: state.user.authError\n});\nconst mapDispatchToProps = (dispatch) => ({\n    logIn: (user) => dispatch(logIn(user))\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(signIn);","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {connect} from 'react-redux';\nimport {newPost} from '../actions/';\nimport { withRouter, Redirect} from 'react-router-dom';\nclass Post extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {\n                title: \"\",\n                postContent: \"\",\n                userId: \"\"\n            },\n            passErr: \"\",\n            regSuccess: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    componentDidMount(){\n        console.log(this.props.token);\n    }\n    handleChange = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        this.setState({\n            formData: {\n                ...formData,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        const {title, postContent} = formData;\n        this.setState({title: this.state.title, postContent: this.state.postContent});\n        const creds = {\n            title,\n            postContent\n        }\n        this.props.newPost(creds);\n        console.log(creds);\n    }\n    render() {\n        if (!this.props.isAuthenticated) {\n            return (<Redirect to='/signIn' />);\n        }\n        return (\n            <div style={{padding: '20px 100px'}}>\n                {this.props.error && (\n                    <div style={{\n                        color: 'red'\n                    }}>\n                        {this.props.error}\n                    </div>\n                )}\n                {this.state.passErr && (\n                    <div style={{\n                        color: 'red'\n                    }}>\n                        {this.state.passErr}\n                    </div>\n                )}\n                <h1>New Post</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"Title\"\n                        style={{\n                        width: 560\n                    }}\n                        name=\"title\"\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        variant=\"outlined\"/>\n                    <br></br>\n                    <TextField\n                        id=\"outlined-multiline-static\"\n                        label=\"Post Content\"\n                        name=\"postContent\"\n                        multiline\n                        style={{\n                        width: 560\n                    }}\n                        rows=\"4\"\n                        value={this.state.postContent}\n                        onChange={this.handleChange}\n                        defaultValue=\"\"\n                        margin=\"normal\"\n                        variant=\"outlined\"/>\n                    <br></br>\n                    <br></br>\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, \n    error: state.post.postError,\n    isAuthenticated: state.user.isAuthenticated\n})\nconst mapDispatchToProps = (dispatch) => ({\n    newPost: (post) => dispatch(newPost(post))\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Post));","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {Forget} from '../../actions/';\nconst Styles = {\n    myPaper: {\n        margin: '20px 0px',\n        padding: '20px'\n    },\n    wrapper: {\n        padding: '0px 60px'\n    },\n    textF: {\n        width: '500px'\n    }\n}\nclass Forgot extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.sendEmail = this.sendEmail.bind(this);\n    }\n    handleChange = name => event => {\n        this.setState({[name]: event.target.value});\n    };\n    sendEmail = e => {\n        e.preventDefault();\n        const { email } = this.state\n        const creds = {\n            email\n        }\n        console.log(creds);\n        this.props.Forget(creds);\n    };\n    render() {\n        const {email, messageFromServer, showNullError, showError} = this.state;\n        return (\n            <div className=\"App\" style={Styles.wrapper}>\n                <h1> Forgot Password</h1>\n                {this.props.showError && (\n                  <div>\n                    <p>\n                      That email address isn't recognized. Please try again or register\n                      for a new account.\n                    </p>\n                  </div>\n                )}\n                {this.props.messageFromServer === 'recovery email sent' && (\n                    <div>\n                        <h3>Password Reset Email Successfully Sent!</h3>\n                    </div>\n                )}\n                <form className=\"profile-form\" onSubmit={this.sendEmail}>\n                    <TextField\n                        id=\"email\"\n                        label=\"Email\"\n                        style={Styles.textF}\n                        value={email}\n                        onChange={this.handleChange('email')}\n                        placeholder=\"Email Address\"/>\n                    <br></br>\n                    <br></br>\n                    <Button variant=\"outlined\" type=\"submit\">\n                        Send Password Reset Email\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    // token: state.user.getToken, \n    // error: state.post.postError\n    showError: state.account.showError,\n    messageFromServer: state.account.messageFromServer\n})\nconst mapDispatchToProps = (dispatch) => ({\n    Forget: (creds) => dispatch(Forget(creds))\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Forgot));","import React, {Component} from 'react';\n// import axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport {withStyles} from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {Redirect} from 'react-router-dom';\nimport ourStyles from '../styles/ourStyles';\nimport github from './github/github';\nimport Axios from '../Axios';\nimport { history } from '../components/layout/Navbar';\nclass Home extends Component {\n      state = {\n        user: \"\"\n\n      }\n        \n    \n    componentWillMount = () => {\n        // this.fetchData();\n    }\n    fetchData = () => {\n        // experiementing not actually anything useful.\n        fetch(process.env.REACT_APP_BASE_GITHUB_SIGNIN, { \n            method: \"GET\",\n            mode: 'cors'\n            })\n            .then( (res)=> {\n                console.log(res)\n                // history.push('/dashboard')   \n            })\n            .catch( (err) => {\n            })\n    }\n    render() {\n        const {classes} = this.props;\n        if (this.props.isAuthenticated) {\n            return (<Redirect to='/dashboard' />);\n        }\n        return (\n            <div className={classes.root}>\n                <Grid container justify=\"center\" spacing={44}>\n                    <Grid item sm={7}>\n                        <Paper className={classes.paper}>\n                            <h1>Sign Up</h1>\n                            <Chip\n                                label=\"Sign In with Github\"\n                                clickable\n                                onClick={this.fetchData}\n                                avatar={< Avatar alt = \"Natacha\" src = \"https://avatars0.githubusercontent.com/u/9919?s=280&v=4\" />}\n                                // href={process.env.REACT_APP_BASE_GITHUB_SIGNIN}\n                                component=\"a\"\n                                className={classes.chip}/>\n                            <Chip\n                                label=\"Sign Up with E-Mail\"\n                                clickable\n                                href=\"/signUp\"\n                                component=\"a\"\n                                className={classes.chip}/>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken,\n    isAuthenticated: state.user.isAuthenticated,\n    redirectTo: state.user.redirectTo\n})\nconst mapDispatchToProps = (dispatch) => ({\n});\n// export default withStyles(styles)(Navbar);\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(Home);","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nconst Editable = (props) => (\n    <div>\n        <TextField\n            id=\"outlined-name\"\n            label=\"Title\"\n            style={{width: 560}}\n            name=\"title\"\n            value={props.editField}\n            onChange={props.editChange}\n            margin=\"normal\"\n            required\n            variant=\"outlined\"/>\n\n    </div>\n)\n\nexport default Editable; ","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\nimport Editable from './Editable';\nimport {connect} from 'react-redux';\nimport {UpdatePost} from '../actions/';\nconst Styles = {\n    myPaper: {\n        margin: '20px 0px',\n        padding: '20px'\n    },\n    button:{\n        marginRight:'30px'\n    }\n}\n\n\nclass PostItem extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            disabled: false,\n        }\n    }\n\n\n    onUpdate = (id, title) => () => {\n        // we need the id so expres knows what post to update, and the title being that only editing the title. \n        if(this.props.myTitle !== null){\n            const creds = {\n                id, title\n            }\n            this.props.UpdatePost(creds); \n        }\n       \n    }\n    render(){\n        const {title, id, removePost, createdAt, post_content, username, editForm, isEditing, editChange, myTitle, postUpdate} = this.props\n        return(\n            <div>\n                   <Typography variant=\"h6\" component=\"h3\">\n                   {/* if else teneray operator */}\n                   {isEditing ? (\n                       <Editable editField={myTitle ? myTitle : title} editChange={editChange}/>\n                   ): (\n                       <div>\n                           {title}\n                       </div>    \n                   )}         \n                   </Typography>\n                   <Typography component=\"p\">\n                       {post_content}\n                       <h5>\n                           by: {username}</h5>\n                       <Typography color=\"textSecondary\">{moment(createdAt).calendar()}</Typography>\n                   </Typography>\n                   {!isEditing ? (\n                       <Button variant=\"outlined\" type=\"submit\" onClick={editForm(id)}>\n                           Edit\n                       </Button>\n                   ):(\n                       // pass id, and myTitle which as we remember myTitle is the new value when updating the title\n                       <Button   variant=\"outlined\" onClick={this.onUpdate(id, myTitle)}>\n                           Update\n                       </Button>\n                   )}\n                   <Button\n                       style={{marginLeft: '0.7%'}}\n                       variant=\"outlined\"\n                       color=\"primary\"\n                       type=\"submit\"\n                       onClick={removePost(id)}>\n                       Remove\n                   </Button>\n           </div>\n       )\n        \n    }\n\n}\nconst mapDispatchToProps = (dispatch) => ({\n    // pass creds which can be called anything, but i just call it credentials but it should be called something more \n    // specific.\n    UpdatePost: (creds) => dispatch(UpdatePost(creds)),\n    // Pass id to the DeletePost functions.\n});\nexport default connect(null, mapDispatchToProps)(PostItem);","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\nimport {connect} from 'react-redux';\nimport {DeletePost, UpdatePost} from '../actions/';\nimport PostItem from './PostItem';\nconst Styles = {\n    myPaper: {\n        margin: '20px 0px',\n        padding: '20px'\n    }\n}\nclass PostList extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            isEditing:false,\n            isEditingId:null,\n            title: ''\n        }\n    }\n    // Return a new function. Otherwise the DeletePost action will be dispatch each\n     // time the Component rerenders.\n    removePost = (id) => () => {\n        this.props.DeletePost(id);\n    }\n    onChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            title: e.target.value\n        })\n    }\n    \n  \n    formEditing = (id) => ()=> {\n        this.setState({\n            isEditingId: id\n          });\n    }\n      \n    render(){\n        const {posts, editForm, isEditing, editChange} = this.props;\n        return (\n            <div>\n                {posts.map((post, i) => (\n                    <Paper key={post.id} style={Styles.myPaper}>\n                    {/* {...post} prevents us from writing all of the properties out */}\n                        <PostItem  myTitle={this.state.title} editChange={this.onChange} editForm={this.formEditing} isEditing={this.state.isEditingId === post.id} removePost={this.removePost} {...post} />\n                    </Paper>\n                ))}\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = (dispatch) => ({\n    // pass creds which can be called anything, but i just call it credentials but it should be called something more \n    // specific.\n    UpdatePost: (creds) => dispatch(UpdatePost(creds)),\n    // Pass id to the DeletePost functions.\n    DeletePost: (id) => dispatch(DeletePost(id))\n});\nexport default connect(null, mapDispatchToProps)(PostList);","import React, { Component } from 'react';\nimport PostList from './PostList';\nimport {connect} from 'react-redux';\nimport { withRouter, Redirect} from 'react-router-dom';\nimport {GetPosts} from '../actions/';\nconst Styles = {\n    myPaper:{\n      margin: '20px 0px',\n      padding:'20px'\n    }\n    , \n    wrapper:{\n      padding:'0px 60px'\n    }\n}\nclass Posts extends Component {\n  state = {\n    posts: [],\n    loading: true,\n    isEditing: false, \n  }\n  async componentWillMount(){\n    await this.props.GetPosts();\n    this.setState({ loading: false })\n    const reduxPosts = this.props.myPosts;\n    const ourPosts = reduxPosts  \n    console.log(reduxPosts); // shows posts line 35\n  }\n  \n  render() {\n    const {loading} = this.state;\n    const { myPosts} = this.props\n    if (!this.props.isAuthenticated) {\n      return (<Redirect to='/signIn' />);\n    }\n    if(loading){\n      return \"loading...\"\n    }\n    return (\n      <div className=\"App\" style={Styles.wrapper}>\n        <h1> Posts </h1>\n        <PostList posts={myPosts}/>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.user.isAuthenticated,\n  myPosts: state.post.posts\n})\nconst mapDispatchToProps = (dispatch, state) => ({\n  GetPosts: () => dispatch( GetPosts())\n});\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Posts));","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nconst Styles = {\n    myPaper:{\n      margin: '20px 0px',\n      padding:'20px'\n    }\n    , \n    wrapper:{\n      padding:'0px 60px'\n    }\n}\nclass Users extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      users: [],\n      loading: true,\n    }\n  }\n  getUsers = async () => {\n    const url = await fetch('/api/users')\n    const json = await url.json();\n    this.setState({\n      users: json,\n      loading: false\n    })\n    console.log(this.state.users);\n  }\n  componentWillMount(){\n    this.getUsers();\n  }\n  render() {\n    const {loading, users} = this.state;\n    if(loading){\n      return \"loading...\"\n    }\n    return (\n      <div className=\"App\" style={Styles.wrapper}>\n        <h1> Welcome</h1>\n        {users.map( (user, i) => (\n        <Paper key={i} style={Styles.myPaper}>\n          <Typography  variant=\"h6\" component=\"h3\">\n            {user.username}  \n          </Typography>\n          <Typography component=\"p\">\n            {user.email}\n          </Typography>\n        </Paper>\n        ))}\n      </div>\n    );\n  }\n}\nexport default Users;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {Redirect} from 'react-router-dom';\nconst Styles = {\n    myPaper:{\n      margin: '20px 0px',\n      padding:'20px'\n    }\n    , \n    wrapper:{\n      padding:'0px 60px'\n    }\n}\nclass Dashboard extends Component {\n  state = { \n      first_name: '',\n      last_name: '',\n      email: '',\n      username: '',\n      password: '',\n      isLoading: true,\n      deleted: false,\n      error: false,\n    }\n  \n  render() {\n    // if (!this.props.isAuthenticated) {\n    //   return (<Redirect to='/signIn' />);\n    // }\n    return (\n      <div className=\"App\" style={Styles.wrapper}>\n        <h1> Welcome</h1>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.user.isAuthenticated,\n})\n// export default withStyles(styles)(Navbar);\nexport default compose(connect(mapStateToProps, null))(Dashboard);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nconst loading = {\n  margin: '1em',\n  fontSize: '24px',\n};\n\nconst title = {\n  pageTitle: 'Update Password Screen',\n};\n\nclass updatePassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      loadingUser: false,\n      updated: false,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loadingUser: true });\n\n    let accessString = localStorage.getItem('JWT');\n    if (accessString === null) {\n      this.setState({\n        loadingUser: false,\n        error: true,\n      });\n    } else {\n      axios\n        .get('/api/users/findUser', {\n          params: {\n            username: this.props.match.params.username,\n          },\n          headers: { Authorization: `JWT ${accessString}` },\n        })\n        .then(response => {\n          // console.log(response.data);\n          this.setState({\n            loadingUser: false,\n            username: response.data.username,\n            password: response.data.password,\n            error: false,\n          });\n        })\n        .catch(error => {\n          console.log(error.response.data);\n          this.setState({\n            loadingUser: false,\n            error: true,\n          });\n        });\n    }\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  updatePassword = e => {\n    let accessString = localStorage.getItem('JWT');\n    if (accessString === null) {\n      this.setState({\n        loadingUser: false,\n        error: true,\n      });\n    } else {\n      e.preventDefault();\n      axios\n        .put(\n          '/api/users/updatePassword',\n          {\n            username: this.state.username,\n            password: this.state.password,\n          },\n          {\n            headers: { Authorization: `JWT ${accessString}` },\n          },\n        )\n        .then(response => {\n          if (response.data.message === 'password updated') {\n            this.setState({\n              updated: true,\n              error: false,\n              loadingUser: false,\n            });\n          }\n        })\n        .catch(error => {\n          console.log(error.response.data);\n          this.setState({\n            updated: false,\n            error: true,\n            loadingUser: false,\n          });\n        });\n    }\n  };\n\n  render() {\n    const { username, password, updated, error, loadingUser } = this.state;\n\n    if (error) {\n      return (\n        <div>\n          <AppBar  title={title} />\n          <p style={loading}>\n            There was a problem accessing your data. Please go login again.\n          </p>\n       \n        </div>\n      );\n    } else if (loadingUser !== false) {\n      return (\n        <div>\n          <AppBar  title={title} />\n          <p style={loading}>Loading user data...</p>\n        </div>\n      );\n    } else if (loadingUser === false && updated === true) {\n      return <Redirect to={'/dashboard'} />;\n    } else if (loadingUser === false) {\n      return (\n        <div>\n          <AppBar  title={title} />\n          <form className=\"profile-form\" onSubmit={this.updatePassword}>\n            <TextField\n              id=\"password\"\n              label=\"password\"\n              value={password}\n              onChange={this.handleChange('password')}\n              type=\"password\"\n            />\n        <Button  variant=\"outlined\" type=\"submit\">\n            Save Changes\n         </Button>\n          </form>\n      \n        </div>\n      );\n    }\n  }\n}\n\nexport default updatePassword;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { updatePass, Reset} from '../../actions';\nconst loading = {\n  margin: '1em',\n  fontSize: '24px',\n};\n\nconst title = {\n  pageTitle: 'Password Reset Screen',\n};\nconst Styles = {\n  myPaper: {\n      margin: '20px 0px',\n      padding: '20px'\n  },\n  wrapper: {\n      padding: '0px 60px'\n  },\n\n  textF: {\n      width: '500px'\n  }\n\n}\n\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      update: false,\n      isLoading: true,\n      error: false,\n    };\n  }\n\nasync componentDidMount() {\n\n  // this.props.Reset();\n    await axios\n      .get('/api/users/reset', {\n        params: {\n          resetPasswordToken: this.props.match.params.token,\n        },\n      })\n      .then(response => {\n        console.log(response);\n        if (response.data.message === 'password reset link a-ok') {\n          this.setState({\n            username: response.data.username,\n            update: false,\n            isLoading: false,\n            error: false,\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error.response.data);\n        this.setState({\n          update: false,\n          isLoading: false,\n          error: true,\n        });\n      });\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  updatePassword = e => {\n    e.preventDefault();\n    const {username, password} = this.state;\n\n    const creds = {\n      username, password\n    }\n\n  \n    this.props.updatePass(creds);\n    \n   \n   \n    // axios\n    //   .put('/api/users/updatePasswordViaEmail', {\n    //     username: this.state.username,\n    //     password: this.state.password,\n    //   })\n    //   .then(response => {\n    //     console.log(response.data);\n    //     if (response.data.message === 'password updated') {\n    //       this.setState({\n    //         updated: true,\n    //         error: false,\n    //       });\n    //     } else {\n    //       this.setState({\n    //         updated: false,\n    //         error: true,\n    //       });\n    //     }\n    //   })\n    //   .catch(error => {\n    //     console.log(error.data);\n    //   });\n  };\n\n  render() {\n    const { password, error, isLoading, updated } = this.state;\n\n  \n      return (\n        <div className=\"App\" style={Styles.wrapper}>\n         <h1> Update Password</h1>\n\n         {this.props.updated && (\n            <div>\n              <p>\n              {this.props.updated}\n              </p>\n            \n            </div>\n          )}\n     \n          <form className=\"password-form\" onSubmit={this.updatePassword}>\n            <TextField\n              id=\"Password\"\n              label=\"Password\"\n              style={Styles.textF}\n              onChange={this.handleChange('password')}\n              value={password}\n              type=\"password\"\n            />\n          <br></br>\n          <br></br>\n          <Button color=\"primary\" variant=\"outlined\" type=\"submit\">\n            Update Password\n         </Button>\n          </form>\n\n         \n        </div>\n      );\n    }\n  }\n\n\nconst mapStateToProps = (state) => ({\n\n  updated: state.account.update,\n  isLoading: state.account.isLoading\n\n\n\n})\nconst mapDispatchToProps = (dispatch) => ({\n  Reset: () => dispatch(Reset()),\n  updatePass: (creds) => dispatch(updatePass(creds))\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ResetPassword));","import React from 'react';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport signUp from '../auth/signUp';\nimport signIn from '../auth/signIn';\nimport Post from '../Post';\nimport Forgot from '../account/Forgot';\nimport Home from '../Home';\nimport Posts from '../Posts';\nimport Users from '../account/Users';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core';\nimport Dashboard from '../account/dashBoard';\nimport {connect} from 'react-redux';\nimport {createBrowserHistory} from 'history';\nimport PropTypes from 'prop-types';\nimport {compose} from 'redux';\nimport Axios from '../../Axios';\nimport updatePassword from '../account/updatePassword';\nimport ResetPassword from '../account/ResetPassword';\nimport ourStyles from '../../styles/ourStyles';\nexport const history = createBrowserHistory({forceRefresh: true});\n\n\nconst logout = (e) => {\n    e.preventDefault()\n    Axios.get(process.env.REACT_APP_LOGOUT, {withCredentials: true})\n        .then(res => {\n            // console.log(res);\n            if (res.status === 200) {\n                localStorage.removeItem('auth')\n                localStorage.removeItem('myAuth')\n                history.push('/')\n            }\n        })\n        .catch(err => {\n        //     // their will be an inevitable error, so you would need this for it to work\n            localStorage.removeItem('auth')\n             localStorage.removeItem('myAuth')\n            history.push('/')\n         })\n}\n\nconst Navbar = ({classes, isAuthenticated}) => (\n\n    <Router history={history}>\n\n        <div className={classes.navRoot}>\n\n            <AppBar position=\"static\" className={classes.navbar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Express Seqeuelize App\n                    </Typography>\n\n                    <Typography classcolor=\"inherit\" className={classes.rightt}>\n\n                        {!isAuthenticated && (\n\n                            <Button>\n                                <Link to=\"/\" className={classes.rightToolbar}>\n                                    Home\n                                </Link>\n                            </Button>\n\n                        )}\n                        {isAuthenticated && (\n                            <Button>\n                                <Link className={classes.rightToolbar} to=\"/posts\">\n                                    Posts\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {!isAuthenticated && (\n\n                            <Button>\n                                <Link to=\"/signUp\" className={classes.rightToolbar}>\n                                    Sign Up\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {!isAuthenticated && (\n\n                            <Button>\n                                <Link to=\"/signIn\" className={classes.rightToolbar}>\n                                    Sign In\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {isAuthenticated && (\n                            <Button>\n                                <Link className={classes.rightToolbar} to=\"/Post\">\n                                    New Post\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {isAuthenticated && (\n                            <Button>\n                                <Link to=\"/dashboard\" className={classes.rightToolbar}>\n                                    Dashboard\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {isAuthenticated && (\n                            <Button onClick={logout}>\n\n                                LogOut\n\n                            </Button>\n                        )}\n\n                    </Typography>\n\n                </Toolbar>\n            </AppBar>\n\n            <Route exact path=\"/signUp\" component={signUp}/>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/signIn\" component={signIn}/>\n            <Route exact path=\"/Post\" component={Post}/>\n            <Route exact path=\"/Posts\" component={Posts}/>\n            <Route path=\"/Forgot\" component={Forgot}/>\n            <Route path=\"/users\" component={Users}/>\n            <Route exact path=\"/logout\"/>\n            <Route exact path=\"/dashboard\" component={Dashboard}/>\n            <Route path=\"/test\"/>\n            <Route path=\"/reset/:token\" component={ResetPassword}/>\n            <Route exact path=\"/updatePassword/:username\" component={updatePassword}/>\n        </div>\n    </Router>\n\n);\n\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, githubAuth: state.user.githubAuth,\n    // owl: state.user.owl,\n    isAuthenticated: state.user.isAuthenticated\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    //   logIn: (user) => dispatch(logIn(user))\n\n});\n\nNavbar.propTypes = {\n    isAuthenticatd: PropTypes.string\n\n}\n\n// export default withStyles(styles)(Navbar);\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(Navbar);","import React, { Component } from 'react';\n// import axios from 'axios';\nimport Navbar from './components/layout/Navbar';\nimport { withStyles } from '@material-ui/core/styles';\nimport {compose} from 'redux';\nimport { connect } from 'react-redux';\nimport { getUser, setCurrentUser} from './actions/';\nimport setAuthToken from './setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport ourStyles from './styles/ourStyles';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: \"\",\n      isAuthenticated: false,\n    }\n}\ncomponentWillMount(){\n  if (localStorage.auth != null) {\n    // Set auth token header auth\n    setAuthToken(localStorage.auth);\n    const token = localStorage.getItem('auth');\n    // // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // console.log(decoded);\n    // // Set user and isAuthenticated\n    this.props.setCurrentUser(decoded);\n  }\n    // this.props.getUser();\n    // console.log(this.props.owl);\n}\n  render() {\n    const { classes, isAuthenticated } = this.props;\n    return (\n      <div className=\"App\">\n        <Navbar />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.user.isAuthenticated,\n  owl: state.user.owl\n})\nconst mapDispatchToProps = (dispatch) => ({\n  getUser: () => dispatch (getUser()),\n  setCurrentUser: () => dispatch( setCurrentUser()),\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_USER,  GET_CURRENT_USER, GET_USER,  REG_SUC, REG_FAIL, LOG_FAIL} from '../actions/';\n\n\nconst initialState = {\n    authError: null,\n    isAuthenticated:localStorage.getItem('auth'),\n    githubAuth:localStorage.getItem('gitAuth'),\n    token: null,\n    user: [],\n    owl:localStorage.getItem('myAuth'),\n    redirectPath: null\n    \n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER:\n        console.log(action.payload);\n            return ({\n                ...state,\n                user:action.user,\n                token: action.payload,\n                isAuthenticated:action.isAuthenticated\n            });\n        case LOG_FAIL:\n            return({\n                ...state,\n                authError:action.err.response.data \n            });\n        \n        case GET_USER:\n            return({\n                ...state,\n      \n            });  \n        case GET_CURRENT_USER:\n            return({\n                ...state,\n                owl: action.data.owl \n            \n            })\n        case REG_SUC:\n            return({\n                ...state,\n                user:action.user,\n                token: action.payload\n            });\n        case REG_FAIL:\n            return({\n                ...state,\n                authError:action.err.response.data\n            });\n\n    \n        default:\n            return state\n    }\n}","import { POST_FAIL, GET_POSTS, EDIT_POST, POST_SUCC, DELETE_POST,UPDATE_POST} from '../actions/';\n\nconst initialState = {\n    post: [],\n    postError: null,\n    posts:[]\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case POST_SUCC:\n            return ({\n                ...state,\n                post:action.post\n            });\n\n        case POST_FAIL:\n            return({\n                ...state,\n                postError: action.err.response.data\n            })\n        case GET_POSTS:\n            // console.log(action.data)\n            return {...state, posts: action.data}\n        case DELETE_POST:\n            // console.log(state.posts) gets posts from posts initialState so we can iterate and delete post\n            return ({\n                ...state,\n                // action.id refers to the id from the DeletePost Action\n               posts: state.posts.filter(post => post.id !== action.id) \n            })\n\n        case UPDATE_POST:\n            return({\n                ...state,\n                \n            })\n        default:\n            return state\n    }\n}","import {FORGOT, RESET, RESET_FAIL,UPDATEPASS, UPDATEPASS_FAIL,  FORGOT_ERR } from '../actions/';\nconst initialState = {\n    showError: false,\n    messageFromServer: null,\n    showNullError:null,\n    username: null,\n    update: null,\n    isLoading: false,\n    error: false,\n    errorMessage: null\n}\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case FORGOT:\n            return ({\n                ...state,\n                showError:false,\n                messageFromServer:'recovery email sent'\n            });\n        case FORGOT_ERR:\n            return({\n                ...state,\n                showError: true,\n                messageFromServer: '',\n                showNullError: false,\n            });\n        case RESET:\n            return({\n                ...state,\n                username:action.creds.username,\n                update: false,\n                isLoading: false,\n                error: false,\n            });\n        case RESET_FAIL:\n            return({\n                ...state,\n                update: false,\n                isLoading: false,\n                error: true,\n            })\n        case UPDATEPASS:\n            return({\n                ...state,\n                update: 'Your password has been successfully reset, please try logging in again',\n                error: false\n            });\n        case UPDATEPASS_FAIL:\n            return({\n                ...state, \n                update: 'Please Enter An Email' ,\n                error: true,\n            })\n        default:\n            return state\n    }\n}","import authReducer from './users';\nimport postReducer from './posts';\nimport accountReducer from './account';\nimport { combineReducers } from 'redux';\n\n\nconst rootReducer = combineReducers({\n    user: authReducer,\n    post: postReducer,\n    account: accountReducer\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// import indigo from '@material-ui/core/colors/indigo';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n        light: '#757ce8',\n        main: '#7986cb',\n    },\n    secondary: {\n      main: '#9fa8da',\n    },\n  },\n});\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\n\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(\n<Provider store={store}>   \n    <Router>\n        <MuiThemeProvider theme = {theme}>\n            <App />\n        </MuiThemeProvider>\n    </Router>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}