{"version":3,"sources":["Axios.js","setAuthToken.js","styles/ourStyles.js","components/auth/signUp.js","actions/index.js","components/auth/signIn.js","components/Post.js","components/account/Forgot.js","components/Home.js","components/PostList.js","components/Posts.js","components/account/Users.js","components/account/dashBoard.js","components/account/updatePassword.js","components/account/ResetPassword.js","components/layout/Navbar.js","App.js","serviceWorker.js","reducers/users.js","reducers/posts.js","reducers/account.js","reducers/index.js","index.js"],"names":["AxiosInstance","Axios","create","baseURL","process","withCredentials","headers","Content-Type","Accept","interceptors","response","use","setAuthToken","token","defaults","common","ourStyles","theme","root","flexGrow","padding","paper","spacing","unit","textAlign","color","palette","text","secondary","chip","margin","button","marginLeft","display","box","width","rightToolbar","textDecoration","a","signIn","signUp","rightt","marginRight","navRoot","menuButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","preventDefault","formData","state","setState","objectSpread","defineProperty","target","name","value","handleSubmit","username","email","password","passwordConf","creds","register","passErr","regSuccess","bind","assertThisInitialized","_this$props","isAuthenticated","classes","react_default","createElement","Redirect","to","Grid_default","justify","container","item","xs","sm","md","className","error","style","onSubmit","TextField_default","id","label","onChange","variant","type","Button_default","m","Component","compose","connect","user","getToken","authError","dispatch","post","then","res","data","localStorage","setItem","console","log","history","push","catch","err","withStyles","MyLink","Link","assign","logIn","loggedEmail","loginError","myToken","userLoggedIn","emailBlank","passwordBlank","emailInvalid","passwordInValid","fullWidth","component","Post","title","postContent","newPost","userId","multiline","rows","defaultValue","withRouter","postError","req","post_content","Styles","myPaper","wrapper","textF","Forgot","event","sendEmail","Forget","_this$state","messageFromServer","showNullError","showError","placeholder","account","Home","componentWillMount","fetchData","fetch","method","mode","Paper_default","Chip_default","clickable","onClick","avatar","Avatar_default","alt","src","href","redirectTo","PostList","_ref","posts","map","i","key","Typography_default","moment","createdAt","calendar","Posts","getPosts","get","loading","components_PostList","Users","getUsers","asyncToGenerator","regenerator_default","mark","_callee","url","json","wrap","_context","prev","next","sent","users","stop","Dashboard","first_name","last_name","isLoading","deleted","fontSize","pageTitle","updatePassword","accessString","getItem","loadingUser","axios","put","Authorization","concat","message","updated","_this2","params","match","AppBar_default","ResetPassword","updatePass","confirmPassword","update","resetPasswordToken","_this$state2","Reset","_ref2","_callee2","_context2","_x3","apply","arguments","createBrowserHistory","forceRefresh","logout","status","removeItem","githubAuth","BrowserRouter","position","navbar","Toolbar_default","classcolor","Route","exact","path","App","auth","decoded","jwt_decode","setCurrentUser","layout_Navbar","owl","getUser","getState","_x","_x2","payload","Boolean","window","location","hostname","initialState","redirectPath","errorMessage","rootReducer","combineReducers","length","undefined","action","createMuiTheme","primary","light","main","store","applyMiddleware","thunk","createStore","createStoreWithMiddleware","ReactDOM","render","es","styles","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7952a6dd.chunk.js","sourcesContent":["import Axios from 'axios'\n\nlet AxiosInstance = Axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  withCredentials: true,\n  headers : {\n    'Content-Type' : 'application/json',\n    'Accept' : 'application/json',\n  }\n\n})\n\n\n\nAxiosInstance.interceptors.response.use(function(response) {\n  // const token = localStorage.getItem('auth');\n  // response.headers.Authorization =  token ? `Bearer ${token}` : '';\n  // console.log(token);\n  return response;\n})\n\nexport default AxiosInstance\n\n\n","import Axios from './Axios';\n\nconst setAuthToken = token => {\n    if (token) {\n      // Apply to every request\n        Axios.defaults.headers.common['Authorization'] = token;\n    } else {\n      // Delete auth header\n        delete Axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport default setAuthToken;","const ourStyles = theme => ({\n    root: {\n        flexGrow: 1,\n        padding: 10\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary\n    },\n    chip: {\n        margin: theme.spacing.unit\n    },\n    button: {\n        marginLeft: 10,\n        margin: 0,\n        flexGrow: 1,\n        display:'inline-block',\n      \n    },\n    box:{\n        width:'500px'\n    },\n    rightToolbar: {\n        color: '#fff',\n        textDecoration: 'none',\n        a: {\n            color: '#fff'\n\n        }\n    },\n    signIn:{\n        margin:'40px',\n        padding:0,\n        flexGrow: 1,\n    },\n    signUp:{\n        margin:'40px',\n        padding:0,\n        flexGrow: 1,\n       \n\n    },\n    rightt: {\n        marginLeft: 'auto',\n        marginRight: 24\n    },\n    navRoot: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: 16,\n        marginLeft: -12\n    }\n    \n});\n\nexport default ourStyles;","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {connect} from 'react-redux';\nimport {withStyles} from '@material-ui/core/styles';\nimport {register} from '../../actions/';\nimport {Redirect, withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\nimport ourStyles from '../../styles/ourStyles';\nclass signUp extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {\n                username: \"\",\n                password: \"\",\n                passwordConf: \"\",\n                email: \"\"\n            },\n            passErr: \"\",\n            regSuccess: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        this.setState({\n            formData: {\n                ...formData,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        const {username, email, password, passwordConf} = formData;\n        this.setState({\n            username: this.state.username,\n            password: this.state.password,\n            passwordConf: this.state.passwordConf,\n            email: this.state.email\n        });\n        const creds = {\n            username,\n            email,\n            password\n        }\n        if (password === passwordConf) {\n            this.props.register(creds);\n        } else {\n            this.setState({passErr: \"Passwords Don't Match\"})\n        }\n    }\n    render() {\n        const {isAuthenticated, classes} = this.props\n        if (isAuthenticated) {\n            return <Redirect to='/dashboard'/>\n        }\n        return (\n            <Grid justify=\"center\" container >\n                <Grid item xs={12} sm={10} md={5} >\n                    <div className={classes.signUp}>\n                        {this.props.error && (\n                            <div\n                                style={{\n                                color: 'red'\n                            }}>\n                                {this.props.error}\n                            </div>\n                        )}\n                        {this.state.passErr && (\n                            <div\n                                style={{\n                                color: 'red'\n                            }}>\n                                {this.state.passErr}\n                            </div>\n                        )}\n                        <h1>Sign Up</h1>\n                        <form onSubmit={this.handleSubmit}>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Username\"\n                                    style={{width: '100%' }}\n                                    name=\"username\"\n                                    value={this.state.username}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Email\"\n                                    className=\"\"\n                                    style={{width: '100%' }}\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    style={{width: '100%' }}\n                                    className=\"\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Confirm Password\"\n                                    name=\"passwordConf\"\n                                    type=\"password\"\n                                    style={{width: '100%' }}\n                                    className=\"\"\n                                    value={this.state.passwordConf}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <Button m={2}variant=\"outlined\" color=\"primary\" type=\"submit\">\n                                    Sign Up\n                                </Button>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, \n    isAuthenticated: state.user.isAuthenticated, \n    error: state.user.authError\n})\nconst mapDispatchToProps = (dispatch) => ({\n    register: (user) => dispatch(register(user))\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(signUp);","import axios from 'axios';\nimport { history } from '../components/layout/Navbar';\nimport Axios from '../Axios';\n\nimport setAuthToken from '../setAuthToken';\nexport const SET_USER = \"SET_USER\";\nexport const LOG_FAIL = \"LOG_FAIL\";\nexport const REG_SUC = \"REG_SUCCESS\";\nexport const REG_FAIL = \"REG_FAIL\";\nexport const POST_SUCC = \"POST_SUCC\";\nexport const POST_FAIL = \"POST_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\nexport const FORGOT = \"FORGOT\";\nexport const FORGOT_ERR = \"FORGET_ERR\";\nexport const RESET = \"RESET\";\nexport const RESET_FAIL = \"RESET_FAIL\";\nexport const UPDATEPASS = \"UPDATEPASS\";\nexport const UPDATEPASS_FAIL = \"UPDATEPASS_FAIL\";\nexport const GET_USER = \"GET_USER\";\nexport const GET_CURRENT_USER = \"GET_CURRENT_USER\";\n\n// Were using a custom Axios because the base url is consistent with the express server port 8000.\n// if we used \"axios\" it would use port:8001, which is consistent with the express server.\nexport const logIn =  (user) => { \n    return (dispatch) => {\n        Axios.post('/api/users/loginUser',{\n            username: user.username,\n            password: user.password,\n        }).then( (res) => {\n            const token = res.data.token;\n            localStorage.setItem('auth', token);\n            setAuthToken(token);\n            history.push('/dashboard');\n            dispatch({type: SET_USER, user});\n        }).catch((err)=> {\n            dispatch({type:  LOG_FAIL, err});\n            console.log(err.response.data); // not even showing err console.\n        })\n    }\n}\nexport const setCurrentUser = decoded => {\n    return {\n        type: GET_USER,\n        payload: decoded\n    };\n};\nexport const register = (user) => { \n    return (dispatch) => {\n        Axios.post('/api/users/new', {\n            username: user.username,\n            password: user.password,\n            email: user.email \n        }).then( (res) => {\n            // signs user in once registered\n            const token = res.data.token;\n            localStorage.setItem('auth', token);\n            setAuthToken(token);\n            console.log(res.data);\n            history.push('/dashboard');\n            dispatch({type: REG_SUC, user});\n        }).catch((err)=> {\n            dispatch({type:  REG_FAIL, err});\n            console.log(err.response.data); // shows console.log for this though.\n        })\n    }\n}\nexport const getUser = () => {\n    return async (dispatch, getState) => {\n      const url = await Axios.get('/api/users/current_user', {\n          withCredentials: 'same-origin'\n      });\n      const response = url;\n      const data = response.data.auth;\n      console.log(data);\n      localStorage.setItem('myAuth', data)\n      dispatch({type: GET_CURRENT_USER, data})\n    }\n}\nexport const newPost = (post, req) => { \n    return (dispatch) => {\n        Axios.post('/api/posts/newPost' ,{\n            title: post.title,\n            post_content: post.postContent\n        }).then( (res) => {\n            // console.log('success')\n            history.push('/Posts');\n            dispatch({type: POST_SUCC, post});\n        }).catch((err)=> {\n            dispatch({type:  POST_FAIL, err});\n            console.log(err.response.data); // shows console.log for this though.\n        })\n    }\n}\nexport const Forget = (creds)  => {\n    return  (dispatch) =>{\n       Axios.post('/api/users/forgotPassword',{\n            email: creds.email\n        }).then(response => {\n            console.log(creds.email);\n            console.log(response.data);\n            if (response.data === 'recovery email sent') {\n                 dispatch({type:FORGOT, creds});     \n            }\n         }).catch(err => {\n            console.log(err.response.data);\n            if (err.response.data === 'email not in db') {\n                dispatch({type:FORGOT_ERR, err});  \n            }\n         });\n    }\n}\nexport const updatePass = (creds)  => {\n    return  (dispatch) =>{\n        Axios.put('/api/users/updatePasswordViaEmail', {\n            username: creds.username,\n            password: creds.password,\n        }).then(response => {\n            // console.log(creds.username);\n            console.log(response);\n            dispatch({type:UPDATEPASS, creds});            \n         }).catch(err => {\n            dispatch({type:UPDATEPASS_FAIL, err});       \n         });\n    }\n}\nexport const Reset = () => {\n    return async (dispatch) =>{\n        await Axios\n            .get('/api/users/reset', {\n                params: {\n                    resetPasswordToken: this.props.match.params.token,\n                },\n            })\n            .then(response => {\n                console.log(response);\n                if (response.data.message === 'password reset link a-ok') {\n                    dispatch({ type: RESET});\n                }\n              })\n              .catch(err => {\n                console.log(err.response.data);\n                dispatch({ type: RESET_FAIL, err});\n              });\n    }\n}\n","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport {withStyles} from '@material-ui/core/styles';\n// import axios from 'axios';\nimport {withRouter, Redirect} from 'react-router-dom'\n// import { history } from '../components/Navbar';\nimport {connect} from 'react-redux';\nimport {logIn} from '../../actions/';\nimport {compose} from 'redux';\nimport {Link} from 'react-router-dom';\nimport ourStyles from '../../styles/ourStyles';\nconst MyLink = props => <Link to=\"/Forgot\" {...props}/>\nclass signIn extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {\n                username: \"\",\n                password: \"\"\n            },\n            loggedEmail: \"\",\n            loginError: \"\",\n            myToken: \"\",\n            userLoggedIn: false,\n            emailBlank: true,\n            passwordBlank: true,\n            emailInvalid: false,\n            passwordInValid: false,\n            // token:localStorage.getItem('JWT')\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        this.setState({\n            formData: {\n                ...formData,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        const {username, password} = formData;\n        const creds = {\n            username,\n            password\n        }\n        this\n            .props\n            .logIn(creds);\n        console.log(creds);\n    }\n    render() {\n        const {classes} = this.props;\n        if (this.props.isAuthenticated) {\n            return (<Redirect to=\"/dashboard\"/>);\n        }\n        return (\n        <div className={classes.signIn}>\n            <Grid justify=\"center\"  container >\n                <Grid item xs={12} sm={'auto'} md={4} >   \n                        {this.props.error && (\n                            <div\n                                style={{\n                                color: 'red'\n                            }}>\n                                {this.props.error}\n                            </div>\n                        )}\n                        <h1>Sign In</h1>\n                        <form onSubmit={this.handleSubmit}>\n                                <TextField\n                                    id=\"outlined-name2\"\n                                    label=\"Username\"\n                                    className=\"\"\n                                    fullWidth\n                                    name=\"username\"\n                                    value={this.state.username}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    fullWidth\n                                    className=\"\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n                                    Log In\n                                </Button>\n                                <Button\n                                    component={MyLink}\n                                    variant=\"outlined\"\n                                    type=\"submit\"\n                                    className={classes.button}>\n                                    Forgot Password ?\n                                </Button>\n                        </form>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, \n    isAuthenticated: state.user.isAuthenticated,\n    error: state.user.authError\n});\nconst mapDispatchToProps = (dispatch) => ({\n    logIn: (user) => dispatch(logIn(user))\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(signIn);","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {connect} from 'react-redux';\nimport {newPost} from '../actions/';\nimport { withRouter, Redirect} from 'react-router-dom';\nclass Post extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            formData: {\n                title: \"\",\n                postContent: \"\",\n                userId: \"\"\n            },\n            passErr: \"\",\n            regSuccess: false\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount(){\n        console.log(this.props.token);\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n\n        const {formData} = this.state;\n\n        this.setState({\n            formData: {\n                ...formData,\n                [e.target.name]: e.target.value\n            }\n        });\n\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const {formData} = this.state;\n        const {title, postContent} = formData;\n        this.setState({title: this.state.title, postContent: this.state.postContent});\n\n        const creds = {\n            title,\n            postContent\n        }\n\n        this\n            .props\n            .newPost(creds);\n        console.log(creds);\n    }\n\n    render() {\n  \n        if (!this.props.isAuthenticated) {\n            return (<Redirect to='/signIn' />);\n        }\n        return (\n            <div style={{\n                padding: '20px 100px'\n            }}>\n\n                {this.props.error && (\n                    <div style={{\n                        color: 'red'\n                    }}>\n                        {this.props.error}\n                    </div>\n                )}\n\n                {this.state.passErr && (\n                    <div style={{\n                        color: 'red'\n                    }}>\n                        {this.state.passErr}\n                    </div>\n                )}\n\n                <h1>New Post</h1>\n\n                <form onSubmit={this.handleSubmit}>\n\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"Title\"\n                        style={{\n                        width: 560\n                    }}\n                        name=\"title\"\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        variant=\"outlined\"/>\n                    <br></br>\n                    <TextField\n                        id=\"outlined-multiline-static\"\n                        label=\"Post Content\"\n                        name=\"postContent\"\n                        multiline\n                        style={{\n                        width: 560\n                    }}\n                        rows=\"4\"\n                        value={this.state.postContent}\n                        onChange={this.handleChange}\n                        defaultValue=\"\"\n                        margin=\"normal\"\n                        variant=\"outlined\"/>\n                    <br></br>\n                    <br></br>\n\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n\n                </form>\n\n            </div>\n\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, \n    error: state.post.postError,\n    isAuthenticated: state.user.isAuthenticated\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    newPost: (post) => dispatch(newPost(post))\n\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Post));","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {Forget} from '../../actions/';\nconst Styles = {\n    myPaper: {\n        margin: '20px 0px',\n        padding: '20px'\n    },\n    wrapper: {\n        padding: '0px 60px'\n    },\n    textF: {\n        width: '500px'\n    }\n}\nclass Forgot extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.sendEmail = this.sendEmail.bind(this);\n    }\n    handleChange = name => event => {\n        this.setState({[name]: event.target.value});\n    };\n    sendEmail = e => {\n        e.preventDefault();\n        const { email } = this.state\n        const creds = {\n            email\n        }\n        console.log(creds);\n        this.props.Forget(creds);\n    };\n    render() {\n        const {email, messageFromServer, showNullError, showError} = this.state;\n        return (\n            <div className=\"App\" style={Styles.wrapper}>\n                <h1> Forgot Password</h1>\n                {this.props.showError && (\n                  <div>\n                    <p>\n                      That email address isn't recognized. Please try again or register\n                      for a new account.\n                    </p>\n                  </div>\n                )}\n                {this.props.messageFromServer === 'recovery email sent' && (\n                    <div>\n                        <h3>Password Reset Email Successfully Sent!</h3>\n                    </div>\n                )}\n                <form className=\"profile-form\" onSubmit={this.sendEmail}>\n                    <TextField\n                        id=\"email\"\n                        label=\"Email\"\n                        style={Styles.textF}\n                        value={email}\n                        onChange={this.handleChange('email')}\n                        placeholder=\"Email Address\"/>\n                    <br></br>\n                    <br></br>\n                    <Button variant=\"outlined\" type=\"submit\">\n                        Send Password Reset Email\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    // token: state.user.getToken, \n    // error: state.post.postError\n    showError: state.account.showError,\n    messageFromServer: state.account.messageFromServer\n})\nconst mapDispatchToProps = (dispatch) => ({\n    Forget: (creds) => dispatch(Forget(creds))\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Forgot));","import React, {Component} from 'react';\n// import axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport {withStyles} from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {Redirect} from 'react-router-dom';\nimport ourStyles from '../styles/ourStyles';\nimport github from './github/github';\nimport Axios from '../Axios';\nimport { history } from '../components/layout/Navbar';\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: \"\"\n        }\n\n\n    }\n\n    componentWillMount = () => {\n\n        // this.fetchData();\n    }\n\n    fetchData = () => {\n      \n        fetch(process.env.REACT_APP_BASE_GITHUB_SIGNIN, { \n            method: \"GET\",\n            mode: 'cors'\n              \n                 \n            })\n            .then( (res)=> {\n                console.log(res)\n                // history.push('/dashboard')   \n            })\n            .catch( (err) => {\n\n            })\n\n    }\n\n\n    render() {\n        const {classes} = this.props;\n  \n        if (this.props.isAuthenticated) {\n            return (<Redirect to='/dashboard' />);\n        }\n        return (\n            <div className={classes.root}>\n                <Grid container justify=\"center\" spacing={44}>\n                    <Grid item sm={7}>\n                        <Paper className={classes.paper}>\n                            <h1>Sign Up</h1>\n                            <Chip\n                                label=\"Sign In with Github\"\n                                clickable\n                                onClick={this.fetchData}\n                                avatar={< Avatar alt = \"Natacha\" src = \"https://avatars0.githubusercontent.com/u/9919?s=280&v=4\" />}\n                                // href={process.env.REACT_APP_BASE_GITHUB_SIGNIN}\n                                component=\"a\"\n                                className={classes.chip}/>\n\n                           \n    \n                            <Chip\n                                label=\"Sign Up with E-Mail\"\n                                clickable\n                                href=\"/signUp\"\n                                component=\"a\"\n                                className={classes.chip}/>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken,\n    isAuthenticated: state.user.isAuthenticated,\n    redirectTo: state.user.redirectTo\n})\nconst mapDispatchToProps = (dispatch) => ({\n});\n// export default withStyles(styles)(Navbar);\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(Home);","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\n\nconst Styles = {\n  myPaper:{\n    margin: '20px 0px',\n    padding:'20px'\n  }\n\n}\n\nconst PostList = ({ posts}) =>  (\n    <div>\n        {posts.map( (post, i) => (\n        <Paper key={i} style={Styles.myPaper}>\n          <Typography  variant=\"h6\" component=\"h3\">\n          {post.title}  \n        \n          </Typography>\n        \n          <Typography component=\"p\">\n            {post.post_content}\n        \n            <h5> by: {post.username}</h5>\n            <h5> {moment(post.createdAt).calendar()}</h5>\n          </Typography>\n        </Paper>\n       ))}\n\n    </div>\n     \n      \n);\n\nexport default PostList;","import React, { Component } from 'react';\nimport PostList from './PostList';\nimport Axios from '../Axios';\nimport {connect} from 'react-redux';\nimport { withRouter, Redirect} from 'react-router-dom';\nconst Styles = {\n    myPaper:{\n      margin: '20px 0px',\n      padding:'20px'\n    }\n    , \n    wrapper:{\n      padding:'0px 60px'\n    }\n}\nclass Posts extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      posts: [],\n      loading: true,\n    }\n  }\n  getPosts = () => {\n    Axios.get(process.env.REACT_APP_GET_POSTS)\n    .then( (res) => {\n       this.setState({\n          posts: res.data,\n          loading: false\n        })\n    })\n    // console.log(this.state.posts);\n  }\n  componentWillMount(){\n    this.getPosts();\n  }\n  render() {\n    const {loading, posts} = this.state;\n    if (!this.props.isAuthenticated) {\n      return (<Redirect to='/signIn' />);\n    }\n    if(loading){\n      return \"loading...\"\n    }\n    return (\n      <div className=\"App\" style={Styles.wrapper}>\n        <h1> Posts </h1>\n        <PostList posts={posts}/>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.user.isAuthenticated\n})\nconst mapDispatchToProps = (dispatch) => ({\n  // newPost: (post) => dispatch(newPost(post))\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Posts));","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nconst Styles = {\n    myPaper:{\n      margin: '20px 0px',\n      padding:'20px'\n    }\n    , \n    wrapper:{\n      padding:'0px 60px'\n    }\n}\nclass Users extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      users: [],\n      loading: true,\n    }\n  }\n  getUsers = async () => {\n    const url = await fetch('/api/users')\n    const json = await url.json();\n    this.setState({\n      users: json,\n      loading: false\n    })\n    console.log(this.state.users);\n  }\n  componentWillMount(){\n    this.getUsers();\n  }\n  render() {\n    const {loading, users} = this.state;\n    if(loading){\n      return \"loading...\"\n    }\n    return (\n      <div className=\"App\" style={Styles.wrapper}>\n        <h1> Welcome</h1>\n        {users.map( (user, i) => (\n        <Paper key={i} style={Styles.myPaper}>\n          <Typography  variant=\"h6\" component=\"h3\">\n            {user.username}  \n          </Typography>\n          <Typography component=\"p\">\n            {user.email}\n          </Typography>\n        </Paper>\n        ))}\n      </div>\n    );\n  }\n}\nexport default Users;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {Redirect} from 'react-router-dom';\nconst Styles = {\n    myPaper:{\n      margin: '20px 0px',\n      padding:'20px'\n    }\n    , \n    wrapper:{\n      padding:'0px 60px'\n    }\n}\nclass Dashboard extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      first_name: '',\n      last_name: '',\n      email: '',\n      username: '',\n      password: '',\n      isLoading: true,\n      deleted: false,\n      error: false,\n    }\n  }\n  componentWillMount(){\n  }\n  render() {\n    // if (!this.props.isAuthenticated) {\n    //   return (<Redirect to='/signIn' />);\n    // }\n    return (\n      <div className=\"App\" style={Styles.wrapper}>\n        <h1> Welcome</h1>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.user.isAuthenticated,\n})\n// export default withStyles(styles)(Navbar);\nexport default compose(connect(mapStateToProps, null))(Dashboard);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nconst loading = {\n  margin: '1em',\n  fontSize: '24px',\n};\n\nconst title = {\n  pageTitle: 'Update Password Screen',\n};\n\nclass updatePassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      loadingUser: false,\n      updated: false,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loadingUser: true });\n\n    let accessString = localStorage.getItem('JWT');\n    if (accessString === null) {\n      this.setState({\n        loadingUser: false,\n        error: true,\n      });\n    } else {\n      axios\n        .get('/api/users/findUser', {\n          params: {\n            username: this.props.match.params.username,\n          },\n          headers: { Authorization: `JWT ${accessString}` },\n        })\n        .then(response => {\n          // console.log(response.data);\n          this.setState({\n            loadingUser: false,\n            username: response.data.username,\n            password: response.data.password,\n            error: false,\n          });\n        })\n        .catch(error => {\n          console.log(error.response.data);\n          this.setState({\n            loadingUser: false,\n            error: true,\n          });\n        });\n    }\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  updatePassword = e => {\n    let accessString = localStorage.getItem('JWT');\n    if (accessString === null) {\n      this.setState({\n        loadingUser: false,\n        error: true,\n      });\n    } else {\n      e.preventDefault();\n      axios\n        .put(\n          '/api/users/updatePassword',\n          {\n            username: this.state.username,\n            password: this.state.password,\n          },\n          {\n            headers: { Authorization: `JWT ${accessString}` },\n          },\n        )\n        .then(response => {\n          if (response.data.message === 'password updated') {\n            this.setState({\n              updated: true,\n              error: false,\n              loadingUser: false,\n            });\n          }\n        })\n        .catch(error => {\n          console.log(error.response.data);\n          this.setState({\n            updated: false,\n            error: true,\n            loadingUser: false,\n          });\n        });\n    }\n  };\n\n  render() {\n    const { username, password, updated, error, loadingUser } = this.state;\n\n    if (error) {\n      return (\n        <div>\n          <AppBar  title={title} />\n          <p style={loading}>\n            There was a problem accessing your data. Please go login again.\n          </p>\n       \n        </div>\n      );\n    } else if (loadingUser !== false) {\n      return (\n        <div>\n          <AppBar  title={title} />\n          <p style={loading}>Loading user data...</p>\n        </div>\n      );\n    } else if (loadingUser === false && updated === true) {\n      return <Redirect to={'/dashboard'} />;\n    } else if (loadingUser === false) {\n      return (\n        <div>\n          <AppBar  title={title} />\n          <form className=\"profile-form\" onSubmit={this.updatePassword}>\n            <TextField\n              id=\"password\"\n              label=\"password\"\n              value={password}\n              onChange={this.handleChange('password')}\n              type=\"password\"\n            />\n        <Button  variant=\"outlined\" type=\"submit\">\n            Save Changes\n         </Button>\n          </form>\n      \n        </div>\n      );\n    }\n  }\n}\n\nexport default updatePassword;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { updatePass, Reset} from '../../actions';\nconst loading = {\n  margin: '1em',\n  fontSize: '24px',\n};\n\nconst title = {\n  pageTitle: 'Password Reset Screen',\n};\nconst Styles = {\n  myPaper: {\n      margin: '20px 0px',\n      padding: '20px'\n  },\n  wrapper: {\n      padding: '0px 60px'\n  },\n\n  textF: {\n      width: '500px'\n  }\n\n}\n\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      update: false,\n      isLoading: true,\n      error: false,\n    };\n  }\n\nasync componentDidMount() {\n\n  // this.props.Reset();\n    await axios\n      .get('/api/users/reset', {\n        params: {\n          resetPasswordToken: this.props.match.params.token,\n        },\n      })\n      .then(response => {\n        console.log(response);\n        if (response.data.message === 'password reset link a-ok') {\n          this.setState({\n            username: response.data.username,\n            update: false,\n            isLoading: false,\n            error: false,\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error.response.data);\n        this.setState({\n          update: false,\n          isLoading: false,\n          error: true,\n        });\n      });\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  updatePassword = e => {\n    e.preventDefault();\n    const {username, password} = this.state;\n\n    const creds = {\n      username, password\n    }\n\n  \n    this.props.updatePass(creds);\n    \n   \n   \n    // axios\n    //   .put('/api/users/updatePasswordViaEmail', {\n    //     username: this.state.username,\n    //     password: this.state.password,\n    //   })\n    //   .then(response => {\n    //     console.log(response.data);\n    //     if (response.data.message === 'password updated') {\n    //       this.setState({\n    //         updated: true,\n    //         error: false,\n    //       });\n    //     } else {\n    //       this.setState({\n    //         updated: false,\n    //         error: true,\n    //       });\n    //     }\n    //   })\n    //   .catch(error => {\n    //     console.log(error.data);\n    //   });\n  };\n\n  render() {\n    const { password, error, isLoading, updated } = this.state;\n\n  \n      return (\n        <div className=\"App\" style={Styles.wrapper}>\n         <h1> Update Password</h1>\n\n         {this.props.updated && (\n            <div>\n              <p>\n              {this.props.updated}\n              </p>\n            \n            </div>\n          )}\n     \n          <form className=\"password-form\" onSubmit={this.updatePassword}>\n            <TextField\n              id=\"Password\"\n              label=\"Password\"\n              style={Styles.textF}\n              onChange={this.handleChange('password')}\n              value={password}\n              type=\"password\"\n            />\n          <br></br>\n          <br></br>\n          <Button color=\"primary\" variant=\"outlined\" type=\"submit\">\n            Update Password\n         </Button>\n          </form>\n\n         \n        </div>\n      );\n    }\n  }\n\n\nconst mapStateToProps = (state) => ({\n\n  updated: state.account.update,\n  isLoading: state.account.isLoading\n\n\n\n})\nconst mapDispatchToProps = (dispatch) => ({\n  Reset: () => dispatch(Reset()),\n  updatePass: (creds) => dispatch(updatePass(creds))\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ResetPassword));","import React from 'react';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport signUp from '../auth/signUp';\nimport signIn from '../auth/signIn';\nimport Post from '../Post';\nimport Forgot from '../account/Forgot';\nimport Home from '../Home';\nimport Posts from '../Posts';\nimport Users from '../account/Users';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core';\nimport Dashboard from '../account/dashBoard';\nimport {connect} from 'react-redux';\nimport {createBrowserHistory} from 'history';\nimport PropTypes from 'prop-types';\nimport {compose} from 'redux';\nimport Axios from '../../Axios';\nimport updatePassword from '../account/updatePassword';\nimport ResetPassword from '../account/ResetPassword';\nimport ourStyles from '../../styles/ourStyles';\nexport const history = createBrowserHistory({forceRefresh: true});\n\n\nconst logout = (e) => {\n    e.preventDefault()\n    Axios.get(process.env.REACT_APP_LOGOUT, {withCredentials: true})\n        .then(res => {\n            // console.log(res);\n            if (res.status === 200) {\n                localStorage.removeItem('auth')\n                localStorage.removeItem('myAuth')\n                history.push('/')\n            }\n        })\n        .catch(err => {\n        //     // their will be an inevitable error, so you would need this for it to work\n            localStorage.removeItem('auth')\n             localStorage.removeItem('myAuth')\n            history.push('/')\n         })\n}\n\nconst Navbar = ({classes, isAuthenticated}) => (\n\n    <Router history={history}>\n\n        <div className={classes.navRoot}>\n\n            <AppBar position=\"static\" className={classes.navbar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Express Seqeuelize App\n                    </Typography>\n\n                    <Typography classcolor=\"inherit\" className={classes.rightt}>\n\n                        {!isAuthenticated && (\n\n                            <Button>\n                                <Link to=\"/\" className={classes.rightToolbar}>\n                                    Home\n                                </Link>\n                            </Button>\n\n                        )}\n                        {isAuthenticated && (\n                            <Button>\n                                <Link className={classes.rightToolbar} to=\"/posts\">\n                                    Posts\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {!isAuthenticated && (\n\n                            <Button>\n                                <Link to=\"/signUp\" className={classes.rightToolbar}>\n                                    Sign Up\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {!isAuthenticated && (\n\n                            <Button>\n                                <Link to=\"/signIn\" className={classes.rightToolbar}>\n                                    Sign In\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {isAuthenticated && (\n                            <Button>\n                                <Link className={classes.rightToolbar} to=\"/Post\">\n                                    New Post\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {isAuthenticated && (\n                            <Button>\n                                <Link to=\"/dashboard\" className={classes.rightToolbar}>\n                                    Dashboard\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {isAuthenticated && (\n                            <Button onClick={logout}>\n\n                                LogOut\n\n                            </Button>\n                        )}\n\n                    </Typography>\n\n                </Toolbar>\n            </AppBar>\n\n            <Route exact path=\"/signUp\" component={signUp}/>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/signIn\" component={signIn}/>\n            <Route exact path=\"/Post\" component={Post}/>\n            <Route exact path=\"/Posts\" component={Posts}/>\n            <Route path=\"/Forgot\" component={Forgot}/>\n            <Route path=\"/users\" component={Users}/>\n            <Route exact path=\"/logout\"/>\n            <Route exact path=\"/dashboard\" component={Dashboard}/>\n            <Route path=\"/test\"/>\n            <Route path=\"/reset/:token\" component={ResetPassword}/>\n            <Route exact path=\"/updatePassword/:username\" component={updatePassword}/>\n        </div>\n    </Router>\n\n);\n\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, githubAuth: state.user.githubAuth,\n    // owl: state.user.owl,\n    isAuthenticated: state.user.isAuthenticated\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    //   logIn: (user) => dispatch(logIn(user))\n\n});\n\nNavbar.propTypes = {\n    isAuthenticatd: PropTypes.string\n\n}\n\n// export default withStyles(styles)(Navbar);\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(Navbar);","import React, { Component } from 'react';\n// import axios from 'axios';\nimport Navbar from './components/layout/Navbar';\nimport { withStyles } from '@material-ui/core/styles';\nimport {compose} from 'redux';\nimport { connect } from 'react-redux';\nimport { getUser, setCurrentUser} from './actions/';\nimport setAuthToken from './setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport ourStyles from './styles/ourStyles';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: \"\",\n      isAuthenticated: false,\n    }\n}\ncomponentWillMount(){\n  if (localStorage.auth != null) {\n    // Set auth token header auth\n    setAuthToken(localStorage.auth);\n    const token = localStorage.getItem('auth');\n    // // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // console.log(decoded);\n    // // Set user and isAuthenticated\n    this.props.setCurrentUser(decoded);\n  }\n    // this.props.getUser();\n    // console.log(this.props.owl);\n}\n  render() {\n    const { classes, isAuthenticated } = this.props;\n    return (\n      <div className=\"App\">\n        <Navbar />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.user.isAuthenticated,\n  owl: state.user.owl\n})\nconst mapDispatchToProps = (dispatch) => ({\n  getUser: () => dispatch (getUser()),\n  setCurrentUser: () => dispatch( setCurrentUser()),\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_USER,  GET_CURRENT_USER, GET_USER,  REG_SUC, REG_FAIL, LOG_FAIL} from '../actions/';\n\n\nconst initialState = {\n    authError: null,\n    isAuthenticated:localStorage.getItem('auth'),\n    githubAuth:localStorage.getItem('gitAuth'),\n    token: null,\n    user: [],\n    owl:localStorage.getItem('myAuth'),\n    redirectPath: null\n    \n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER:\n        console.log(action.payload);\n            return ({\n                ...state,\n                user:action.user,\n                token: action.payload,\n                isAuthenticated:action.isAuthenticated\n            });\n        case LOG_FAIL:\n            return({\n                ...state,\n                authError:action.err.response.data \n            });\n        \n        case GET_USER:\n            return({\n                ...state,\n      \n            });  \n        case GET_CURRENT_USER:\n            return({\n                ...state,\n                owl: action.data.owl \n            \n            })\n        case REG_SUC:\n            return({\n                ...state,\n                user:action.user,\n                token: action.payload\n            });\n        case REG_FAIL:\n            return({\n                ...state,\n                authError:action.err.response.data\n            });\n\n    \n        default:\n            return state\n    }\n}","import { POST_FAIL, POST_SUCC} from '../actions/';\n\nconst initialState = {\n    post: [],\n    postError: null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case POST_SUCC:\n            return ({\n                ...state,\n                post:action.post\n            });\n\n        case POST_FAIL:\n            return({\n                ...state,\n                postError: action.err.response.data\n            })\n  \n        default:\n            return state\n    }\n}","import {FORGOT, RESET, RESET_FAIL,UPDATEPASS, UPDATEPASS_FAIL,  FORGOT_ERR } from '../actions/';\nconst initialState = {\n    showError: false,\n    messageFromServer: null,\n    showNullError:null,\n    username: null,\n    update: null,\n    isLoading: false,\n    error: false,\n    errorMessage: null\n}\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case FORGOT:\n            return ({\n                ...state,\n                showError:false,\n                messageFromServer:'recovery email sent'\n            });\n        case FORGOT_ERR:\n            return({\n                ...state,\n                showError: true,\n                messageFromServer: '',\n                showNullError: false,\n            });\n        case RESET:\n            return({\n                ...state,\n                username:action.creds.username,\n                update: false,\n                isLoading: false,\n                error: false,\n            });\n        case RESET_FAIL:\n            return({\n                ...state,\n                update: false,\n                isLoading: false,\n                error: true,\n            })\n        case UPDATEPASS:\n            return({\n                ...state,\n                update: 'Your password has been successfully reset, please try logging in again',\n                error: false\n            });\n        case UPDATEPASS_FAIL:\n            return({\n                ...state, \n                update: 'Please Enter An Email' ,\n                error: true,\n            })\n        default:\n            return state\n    }\n}","import authReducer from './users';\nimport postReducer from './posts';\nimport accountReducer from './account';\nimport { combineReducers } from 'redux';\n\n\nconst rootReducer = combineReducers({\n    user: authReducer,\n    post: postReducer,\n    account: accountReducer\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// import indigo from '@material-ui/core/colors/indigo';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n        light: '#757ce8',\n        main: '#7986cb',\n    },\n    secondary: {\n      main: '#9fa8da',\n    },\n  },\n});\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\n\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(\n<Provider store={store}>   \n    <Router>\n        <MuiThemeProvider theme = {theme}>\n            <App />\n        </MuiThemeProvider>\n    </Router>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}