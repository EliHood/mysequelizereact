{"version":3,"sources":["Axios.js","setAuthToken.js","styles/ourStyles.js","components/auth/signUp.js","actions/index.js","components/auth/signIn.js","components/Post.js","components/account/Forgot.js","components/Home.js","components/PostList.js","components/Posts.js","components/account/Users.js","components/account/dashBoard.js","components/account/updatePassword.js","components/account/ResetPassword.js","components/layout/Navbar.js","App.js","serviceWorker.js","reducers/users.js","reducers/posts.js","reducers/account.js","reducers/index.js","index.js"],"names":["AxiosInstance","Axios","create","baseURL","process","withCredentials","headers","Content-Type","Accept","interceptors","response","use","setAuthToken","token","defaults","common","ourStyles","theme","root","flexGrow","padding","paper","spacing","unit","textAlign","color","palette","text","secondary","chip","margin","button","marginLeft","display","box","width","rightToolbar","textDecoration","a","signIn","signUp","rightt","marginRight","navRoot","menuButton","state","formData","username","password","passwordConf","email","passErr","regSuccess","handleChange","e","preventDefault","_this","setState","Object","objectSpread","defineProperty","target","name","value","handleSubmit","creds","props","register","_this$props","this","isAuthenticated","classes","react_default","createElement","Redirect","to","Grid_default","justify","container","item","xs","sm","md","className","error","style","onSubmit","TextField_default","id","label","onChange","variant","type","Button_default","m","Component","compose","connect","user","getToken","authError","dispatch","post","then","res","data","localStorage","setItem","console","log","history","push","catch","err","withStyles","MyLink","Link","assign","loggedEmail","loginError","myToken","userLoggedIn","emailBlank","passwordBlank","emailInvalid","passwordInValid","logIn","fullWidth","component","Post","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","title","postContent","newPost","userId","bind","assertThisInitialized","multiline","rows","defaultValue","withRouter","postError","req","post_content","Styles","myPaper","wrapper","textF","Forgot","event","sendEmail","Forget","_this$state","messageFromServer","showNullError","showError","placeholder","account","Home","componentWillMount","fetchData","fetch","method","mode","Paper_default","Chip_default","clickable","onClick","avatar","Avatar_default","alt","src","href","redirectTo","PostList","_ref","posts","map","i","key","Typography_default","moment","createdAt","calendar","Posts","loading","getPosts","get","components_PostList","Users","getUsers","asyncToGenerator","regenerator_default","mark","_callee","url","json","wrap","_context","prev","next","sent","users","stop","Dashboard","first_name","last_name","isLoading","deleted","fontSize","pageTitle","updatePassword","accessString","getItem","loadingUser","axios","put","Authorization","concat","message","updated","_this2","params","match","AppBar_default","ResetPassword","updatePass","confirmPassword","update","resetPasswordToken","_this$state2","Reset","_ref2","_callee2","_context2","_x3","apply","arguments","createBrowserHistory","forceRefresh","logout","status","removeItem","githubAuth","BrowserRouter","position","navbar","Toolbar_default","classcolor","Route","exact","path","App","auth","decoded","jwt_decode","setCurrentUser","layout_Navbar","owl","getUser","getState","_x","_x2","payload","Boolean","window","location","hostname","initialState","redirectPath","errorMessage","rootReducer","combineReducers","length","undefined","action","createMuiTheme","primary","light","main","store","applyMiddleware","thunk","createStore","createStoreWithMiddleware","ReactDOM","render","es","styles","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2YAEIA,EAAgBC,IAAMC,OAAO,CAC/BC,QAASC,wBACTC,iBAAiB,EACjBC,QAAU,CACRC,eAAiB,mBACjBC,OAAW,sBAOfR,EAAcS,aAAaC,SAASC,IAAI,SAASD,GAI/C,OAAOA,IAGMV,QCTAY,EAVM,SAAAC,GACbA,EAEAZ,EAAMa,SAASR,QAAQS,OAAvB,cAAiDF,SAG1CZ,EAAMa,SAASR,QAAQS,OAAvB,gCCiDAC,EAzDG,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFC,SAAU,EACVC,QAAS,IAEbC,MAAO,CACHD,QAA8B,EAArBH,EAAMK,QAAQC,KACvBC,UAAW,SACXC,MAAOR,EAAMS,QAAQC,KAAKC,WAE9BC,KAAM,CACFC,OAAQb,EAAMK,QAAQC,MAE1BQ,OAAQ,CACJC,WAAY,GACZF,OAAQ,EACRX,SAAU,EACVc,QAAQ,gBAGZC,IAAI,CACAC,MAAM,SAEVC,aAAc,CACVX,MAAO,OACPY,eAAgB,OAChBC,EAAG,CACCb,MAAO,SAIfc,OAAO,CACHT,OAAO,OACPV,QAAQ,EACRD,SAAU,GAEdqB,OAAO,CACHV,OAAO,OACPV,QAAQ,EACRD,SAAU,GAIdsB,OAAQ,CACJT,WAAY,OACZU,YAAa,IAEjBC,QAAS,CACLxB,SAAU,GAEdyB,WAAY,CACRF,YAAa,GACbV,YAAa,MC1CfQ,6MACEK,MAAQ,CACJC,SAAU,CACNC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdC,MAAO,IAEXC,QAAS,GACTC,YAAY,KAGpBC,aAAe,SAACC,GACZA,EAAEC,iBADgB,IAEXT,EAAYU,EAAKX,MAAjBC,SACPU,EAAKC,SAAS,CACVX,SAASY,OAAAC,EAAA,EAAAD,CAAA,GACFZ,EADCY,OAAAE,EAAA,EAAAF,CAAA,GAEHJ,EAAEO,OAAOC,KAAOR,EAAEO,OAAOE,aAItCC,aAAe,SAACV,GACZA,EAAEC,iBADgB,IAEXT,EAAYU,EAAKX,MAAjBC,SACAC,EAA2CD,EAA3CC,SAAUG,EAAiCJ,EAAjCI,MAAOF,EAA0BF,EAA1BE,SAAUC,EAAgBH,EAAhBG,aAClCO,EAAKC,SAAS,CACVV,SAAUS,EAAKX,MAAME,SACrBC,SAAUQ,EAAKX,MAAMG,SACrBC,aAAcO,EAAKX,MAAMI,aACzBC,MAAOM,EAAKX,MAAMK,QAEtB,IAAMe,EAAQ,CACVlB,WACAG,QACAF,YAEAA,IAAaC,EACbO,EAAKU,MAAMC,SAASF,GAEpBT,EAAKC,SAAS,CAACN,QAAS,mGAGvB,IAAAiB,EAC8BC,KAAKH,MAAjCI,EADFF,EACEE,gBAAiBC,EADnBH,EACmBG,QACxB,OAAID,EACOE,EAAAlC,EAAAmC,cAACC,EAAA,EAAD,CAAUC,GAAG,eAGpBH,EAAAlC,EAAAmC,cAACG,EAAAtC,EAAD,CAAMuC,QAAQ,SAASC,WAAS,GAC5BN,EAAAlC,EAAAmC,cAACG,EAAAtC,EAAD,CAAMyC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC3BV,EAAAlC,EAAAmC,cAAA,OAAKU,UAAWZ,EAAQ/B,QACnB6B,KAAKH,MAAMkB,OACRZ,EAAAlC,EAAAmC,cAAA,OACIY,MAAO,CACP5D,MAAO,QAEN4C,KAAKH,MAAMkB,OAGnBf,KAAKxB,MAAMM,SACRqB,EAAAlC,EAAAmC,cAAA,OACIY,MAAO,CACP5D,MAAO,QAEN4C,KAAKxB,MAAMM,SAGpBqB,EAAAlC,EAAAmC,cAAA,qBACAD,EAAAlC,EAAAmC,cAAA,QAAMa,SAAUjB,KAAKL,cACbQ,EAAAlC,EAAAmC,cAACc,EAAAjD,EAAD,CACIkD,GAAG,gBACHC,MAAM,WACNJ,MAAO,CAAClD,MAAO,QACf2B,KAAK,WACLC,MAAOM,KAAKxB,MAAME,SAClB2C,SAAUrB,KAAKhB,aACfvB,OAAO,SACP6D,QAAQ,aACZnB,EAAAlC,EAAAmC,cAAA,WACAD,EAAAlC,EAAAmC,cAACc,EAAAjD,EAAD,CACIkD,GAAG,gBACHC,MAAM,QACNN,UAAU,GACVE,MAAO,CAAClD,MAAO,QACf2B,KAAK,QACLC,MAAOM,KAAKxB,MAAMK,MAClBwC,SAAUrB,KAAKhB,aACfvB,OAAO,SACP6D,QAAQ,aACZnB,EAAAlC,EAAAmC,cAAA,WACAD,EAAAlC,EAAAmC,cAACc,EAAAjD,EAAD,CACIkD,GAAG,gBACHC,MAAM,WACN3B,KAAK,WACL8B,KAAK,WACLP,MAAO,CAAClD,MAAO,QACfgD,UAAU,GACVpB,MAAOM,KAAKxB,MAAMG,SAClB0C,SAAUrB,KAAKhB,aACfvB,OAAO,SACP6D,QAAQ,aACZnB,EAAAlC,EAAAmC,cAAA,WACAD,EAAAlC,EAAAmC,cAACc,EAAAjD,EAAD,CACIkD,GAAG,gBACHC,MAAM,mBACN3B,KAAK,eACL8B,KAAK,WACLP,MAAO,CAAClD,MAAO,QACfgD,UAAU,GACVpB,MAAOM,KAAKxB,MAAMI,aAClByC,SAAUrB,KAAKhB,aACfvB,OAAO,SACP6D,QAAQ,aACZnB,EAAAlC,EAAAmC,cAAA,WACAD,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,CAAQwD,EAAG,EAAEH,QAAQ,WAAWlE,MAAM,UAAUmE,KAAK,UAArD,sBAnHXG,aAqINC,cAAQC,YARC,SAACpD,GAAD,MAAY,CAChChC,MAAOgC,EAAMqD,KAAKC,SAClB7B,gBAAiBzB,EAAMqD,KAAK5B,gBAC5Bc,MAAOvC,EAAMqD,KAAKE,YAEK,SAACC,GAAD,MAAe,CACtClC,SAAU,SAAC+B,GAAD,OAAUG,EC9FA,SAACH,GACrB,OAAO,SAACG,GACJpG,EAAMqG,KAAK,iBAAkB,CACzBvD,SAAUmD,EAAKnD,SACfC,SAAUkD,EAAKlD,SACfE,MAAOgD,EAAKhD,QACbqD,KAAM,SAACC,GAEN,IAAM3F,EAAQ2F,EAAIC,KAAK5F,MACvB6F,aAAaC,QAAQ,OAAQ9F,GAC7BD,EAAaC,GACb+F,QAAQC,IAAIL,EAAIC,MAChBK,GAAQC,KAAK,cACbV,EAAS,CAACT,KArDC,cAqDcM,WAC1Bc,MAAM,SAACC,GACNZ,EAAS,CAACT,KAtDE,WAsDeqB,QAC3BL,QAAQC,IAAII,EAAIvG,SAAS+F,SD8EJtC,CAAS+B,QAE2BgB,qBAAWlG,GAAjEgF,CAA6ExD,GEjItF2E,EAAS,SAAAjD,GAAK,OAAIM,EAAAlC,EAAAmC,cAAC2C,EAAA,EAAD1D,OAAA2D,OAAA,CAAM1C,GAAG,WAAcT,KACzC3B,6MACCM,MAAQ,CACHC,SAAU,CACNC,SAAU,GACVC,SAAU,IAEdsE,YAAa,GACbC,WAAY,GACZC,QAAS,GACTC,cAAc,EACdC,YAAY,EACZC,eAAe,EACfC,cAAc,EACdC,iBAAiB,KAIzBxE,aAAe,SAACC,GACZA,EAAEC,iBADgB,IAEXT,EAAYU,EAAKX,MAAjBC,SACPU,EAAKC,SAAS,CACVX,SAASY,OAAAC,EAAA,EAAAD,CAAA,GACFZ,EADCY,OAAAE,EAAA,EAAAF,CAAA,GAEHJ,EAAEO,OAAOC,KAAOR,EAAEO,OAAOE,aAItCC,aAAe,SAACV,GACZA,EAAEC,iBADgB,IAEXT,EAAYU,EAAKX,MAAjBC,SAEDmB,EAAQ,CACVlB,SAFyBD,EAAtBC,SAGHC,SAHyBF,EAAZE,UAKjBQ,EACKU,MACA4D,MAAM7D,GACX2C,QAAQC,IAAI5C,4EAEP,IACEM,EAAWF,KAAKH,MAAhBK,QACP,OAAIF,KAAKH,MAAMI,gBACHE,EAAAlC,EAAAmC,cAACC,EAAA,EAAD,CAAUC,GAAG,eAGzBH,EAAAlC,EAAAmC,cAAA,OAAKU,UAAWZ,EAAQhC,QACpBiC,EAAAlC,EAAAmC,cAACG,EAAAtC,EAAD,CAAMuC,QAAQ,SAAUC,WAAS,GAC7BN,EAAAlC,EAAAmC,cAACG,EAAAtC,EAAD,CAAMyC,MAAI,EAACC,GAAI,GAAIC,GAAI,OAAQC,GAAI,GAC1Bb,KAAKH,MAAMkB,OACRZ,EAAAlC,EAAAmC,cAAA,OACIY,MAAO,CACP5D,MAAO,QAEN4C,KAAKH,MAAMkB,OAGpBZ,EAAAlC,EAAAmC,cAAA,qBACAD,EAAAlC,EAAAmC,cAAA,QAAMa,SAAUjB,KAAKL,cACbQ,EAAAlC,EAAAmC,cAACc,EAAAjD,EAAD,CACIkD,GAAG,iBACHC,MAAM,WACNN,UAAU,GACV4C,WAAS,EACTjE,KAAK,WACLC,MAAOM,KAAKxB,MAAME,SAClB2C,SAAUrB,KAAKhB,aACfvB,OAAO,SACP6D,QAAQ,aACZnB,EAAAlC,EAAAmC,cAACc,EAAAjD,EAAD,CACIkD,GAAG,gBACHC,MAAM,WACN3B,KAAK,WACL8B,KAAK,WACLmC,WAAS,EACT5C,UAAU,GACVpB,MAAOM,KAAKxB,MAAMG,SAClB0C,SAAUrB,KAAKhB,aACfvB,OAAO,SACP6D,QAAQ,aACZnB,EAAAlC,EAAAmC,cAAA,WACAD,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,CAAQqD,QAAQ,WAAWlE,MAAM,UAAUmE,KAAK,UAAhD,UAGApB,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,CACI0F,UAAWb,EACXxB,QAAQ,WACRC,KAAK,SACLT,UAAWZ,EAAQxC,QAJvB,gCApFXgE,aA0GNC,cAAQC,YARC,SAACpD,GAAD,MAAY,CAChChC,MAAOgC,EAAMqD,KAAKC,SAClB7B,gBAAiBzB,EAAMqD,KAAK5B,gBAC5Bc,MAAOvC,EAAMqD,KAAKE,YAEK,SAACC,GAAD,MAAe,CACtCyB,MAAO,SAAC5B,GAAD,OAAUG,ED/FC,SAACH,GACnB,OAAO,SAACG,GACJpG,EAAMqG,KAAK,uBAAuB,CAC9BvD,SAAUmD,EAAKnD,SACfC,SAAUkD,EAAKlD,WAChBuD,KAAM,SAACC,GACN,IAAM3F,EAAQ2F,EAAIC,KAAK5F,MACvB6F,aAAaC,QAAQ,OAAQ9F,GAC7BD,EAAaC,GACbiG,GAAQC,KAAK,cACbV,EAAS,CAACT,KA7BE,WA6BcM,WAC3Bc,MAAM,SAACC,GACNZ,EAAS,CAACT,KA9BE,WA8BeqB,QAC3BL,QAAQC,IAAII,EAAIvG,SAAS+F,SCkFPqB,CAAM5B,QAEiCgB,qBAAWlG,GAAjEgF,CAA6EzD,oBCnHtF0F,cAEF,SAAAA,EAAY/D,GAAO,IAAAV,EAAA,OAAAE,OAAAwE,EAAA,EAAAxE,CAAAW,KAAA4D,IACfzE,EAAAE,OAAAyE,EAAA,EAAAzE,CAAAW,KAAAX,OAAA0E,EAAA,EAAA1E,CAAAuE,GAAAI,KAAAhE,KAAMH,KAoBVb,aAAe,SAACC,GACZA,EAAEC,iBADgB,IAGXT,EAAYU,EAAKX,MAAjBC,SAEPU,EAAKC,SAAS,CACVX,SAASY,OAAAC,EAAA,EAAAD,CAAA,GACFZ,EADCY,OAAAE,EAAA,EAAAF,CAAA,GAEHJ,EAAEO,OAAOC,KAAOR,EAAEO,OAAOE,WA7BnBP,EAmCnBQ,aAAe,SAACV,GACZA,EAAEC,iBADgB,IAGXT,EAAYU,EAAKX,MAAjBC,SACAwF,EAAsBxF,EAAtBwF,MAAOC,EAAezF,EAAfyF,YACd/E,EAAKC,SAAS,CAAC6E,MAAO9E,EAAKX,MAAMyF,MAAOC,YAAa/E,EAAKX,MAAM0F,cAEhE,IAAMtE,EAAQ,CACVqE,QACAC,eAGJ/E,EACKU,MACAsE,QAAQvE,GACb2C,QAAQC,IAAI5C,IA/CZT,EAAKX,MAAQ,CACTC,SAAU,CACNwF,MAAO,GACPC,YAAa,GACbE,OAAQ,IAEZtF,QAAS,GACTC,YAAY,GAGhBI,EAAKH,aAAeG,EAAKH,aAAaqF,KAAlBhF,OAAAiF,EAAA,EAAAjF,CAAAF,IACpBA,EAAKQ,aAAeR,EAAKQ,aAAa0E,KAAlBhF,OAAAiF,EAAA,EAAAjF,CAAAF,IAdLA,mFAkBfoD,QAAQC,IAAIxC,KAAKH,MAAMrD,wCAqCvB,OAAKwD,KAAKH,MAAMI,gBAIZE,EAAAlC,EAAAmC,cAAA,OAAKY,MAAO,CACRjE,QAAS,eAGRiD,KAAKH,MAAMkB,OACRZ,EAAAlC,EAAAmC,cAAA,OAAKY,MAAO,CACR5D,MAAO,QAEN4C,KAAKH,MAAMkB,OAInBf,KAAKxB,MAAMM,SACRqB,EAAAlC,EAAAmC,cAAA,OAAKY,MAAO,CACR5D,MAAO,QAEN4C,KAAKxB,MAAMM,SAIpBqB,EAAAlC,EAAAmC,cAAA,sBAEAD,EAAAlC,EAAAmC,cAAA,QAAMa,SAAUjB,KAAKL,cAEjBQ,EAAAlC,EAAAmC,cAACc,EAAAjD,EAAD,CACIkD,GAAG,gBACHC,MAAM,QACNJ,MAAO,CACPlD,MAAO,KAEP2B,KAAK,QACLC,MAAOM,KAAKxB,MAAMyF,MAClB5C,SAAUrB,KAAKhB,aACfvB,OAAO,SACP6D,QAAQ,aACZnB,EAAAlC,EAAAmC,cAAA,WACAD,EAAAlC,EAAAmC,cAACc,EAAAjD,EAAD,CACIkD,GAAG,4BACHC,MAAM,eACN3B,KAAK,cACL8E,WAAS,EACTvD,MAAO,CACPlD,MAAO,KAEP0G,KAAK,IACL9E,MAAOM,KAAKxB,MAAM0F,YAClB7C,SAAUrB,KAAKhB,aACfyF,aAAa,GACbhH,OAAO,SACP6D,QAAQ,aACZnB,EAAAlC,EAAAmC,cAAA,WACAD,EAAAlC,EAAAmC,cAAA,WAEAD,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,CAAQqD,QAAQ,WAAWlE,MAAM,UAAUmE,KAAK,UAAhD,YAxDApB,EAAAlC,EAAAmC,cAACC,EAAA,EAAD,CAAUC,GAAG,mBA1DdoB,aA0IJgD,cAAW9C,YAXF,SAACpD,GAAD,MAAY,CAChChC,MAAOgC,EAAMqD,KAAKC,SAClBf,MAAOvC,EAAMyD,KAAK0C,UAClB1E,gBAAiBzB,EAAMqD,KAAK5B,kBAGL,SAAC+B,GAAD,MAAe,CACtCmC,QAAS,SAAClC,GAAD,OAAUD,EF7DA,SAACC,EAAM2C,GAC1B,OAAO,SAAC5C,GACJpG,EAAMqG,KAAK,qBAAsB,CAC7BgC,MAAOhC,EAAKgC,MACZY,aAAc5C,EAAKiC,cACpBhC,KAAM,SAACC,GAENM,GAAQC,KAAK,UACbV,EAAS,CAACT,KA9EG,YA8EcU,WAC5BU,MAAM,SAACC,GACNZ,EAAS,CAACT,KA/EG,YA+EeqB,QAC5BL,QAAQC,IAAII,EAAIvG,SAAS+F,SEkDL+B,CAAQlC,OAIdL,CAA6CgC,IC1IjEkB,EAAS,CACXC,QAAS,CACLtH,OAAQ,WACRV,QAAS,QAEbiI,QAAS,CACLjI,QAAS,YAEbkI,MAAO,CACHnH,MAAO,UAGToH,cACF,SAAAA,EAAYrF,GAAO,IAAAV,EAAA,OAAAE,OAAAwE,EAAA,EAAAxE,CAAAW,KAAAkF,IACf/F,EAAAE,OAAAyE,EAAA,EAAAzE,CAAAW,KAAAX,OAAA0E,EAAA,EAAA1E,CAAA6F,GAAAlB,KAAAhE,KAAMH,KAOVb,aAAe,SAAAS,GAAI,OAAI,SAAA0F,GACnBhG,EAAKC,SAALC,OAAAE,EAAA,EAAAF,CAAA,GAAgBI,EAAO0F,EAAM3F,OAAOE,UATrBP,EAWnBiG,UAAY,SAAAnG,GACRA,EAAEC,iBADW,IAGPU,EAAQ,CACVf,MAFcM,EAAKX,MAAfK,OAIR0D,QAAQC,IAAI5C,GACZT,EAAKU,MAAMwF,OAAOzF,IAhBlBT,EAAKX,MAAQ,CACTK,MAAO,IAEXM,EAAKH,aAAeG,EAAKH,aAAaqF,KAAlBhF,OAAAiF,EAAA,EAAAjF,CAAAF,IACpBA,EAAKiG,UAAYjG,EAAKiG,UAAUf,KAAfhF,OAAAiF,EAAA,EAAAjF,CAAAF,IANFA,wEAoBV,IAAAmG,EACwDtF,KAAKxB,MAA3DK,EADFyG,EACEzG,MADFyG,EACSC,kBADTD,EAC4BE,cAD5BF,EAC2CG,UAChD,OACItF,EAAAlC,EAAAmC,cAAA,OAAKU,UAAU,MAAME,MAAO8D,EAAOE,SAC/B7E,EAAAlC,EAAAmC,cAAA,8BACCJ,KAAKH,MAAM4F,WACVtF,EAAAlC,EAAAmC,cAAA,WACED,EAAAlC,EAAAmC,cAAA,kGAM8B,wBAAjCJ,KAAKH,MAAM0F,mBACRpF,EAAAlC,EAAAmC,cAAA,WACID,EAAAlC,EAAAmC,cAAA,sDAGRD,EAAAlC,EAAAmC,cAAA,QAAMU,UAAU,eAAeG,SAAUjB,KAAKoF,WAC1CjF,EAAAlC,EAAAmC,cAACc,EAAAjD,EAAD,CACIkD,GAAG,QACHC,MAAM,QACNJ,MAAO8D,EAAOG,MACdvF,MAAOb,EACPwC,SAAUrB,KAAKhB,aAAa,SAC5B0G,YAAY,kBAChBvF,EAAAlC,EAAAmC,cAAA,WACAD,EAAAlC,EAAAmC,cAAA,WACAD,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,CAAQqD,QAAQ,WAAWC,KAAK,UAAhC,sCAjDCG,aAkENgD,cAAW9C,YATF,SAACpD,GAAD,MAAY,CAGhCiH,UAAWjH,EAAMmH,QAAQF,UACzBF,kBAAmB/G,EAAMmH,QAAQJ,oBAEV,SAACvD,GAAD,MAAe,CACtCqD,OAAQ,SAACzF,GAAD,OAAWoC,EHYD,SAACpC,GACnB,OAAQ,SAACoC,GACNpG,EAAMqG,KAAK,4BAA4B,CAClCpD,MAAOe,EAAMf,QACdqD,KAAK,SAAA7F,GACJkG,QAAQC,IAAI5C,EAAMf,OAClB0D,QAAQC,IAAInG,EAAS+F,MACC,wBAAlB/F,EAAS+F,MACRJ,EAAS,CAACT,KAzFL,SAyFkB3B,YAE5B+C,MAAM,SAAAC,GACNL,QAAQC,IAAII,EAAIvG,SAAS+F,MACC,oBAAtBQ,EAAIvG,SAAS+F,MACbJ,EAAS,CAACT,KA7FA,aA6FiBqB,WGzBXyC,CAAOzF,OAEbgC,CAA6CsD,uDCtEjEU,8MACApH,MAAQ,CACNqD,KAAM,MAKVgE,mBAAqB,eAGrBC,UAAY,WAERC,MAAMhK,8CAA0C,CAC5CiK,OAAQ,MACRC,KAAM,SAEL/D,KAAM,SAACC,GACJI,QAAQC,IAAIL,KAGfQ,MAAO,SAACC,+EAGR,IACE1C,EAAWF,KAAKH,MAAhBK,QACP,OAAIF,KAAKH,MAAMI,gBACHE,EAAAlC,EAAAmC,cAACC,EAAA,EAAD,CAAUC,GAAG,eAGrBH,EAAAlC,EAAAmC,cAAA,OAAKU,UAAWZ,EAAQrD,MACpBsD,EAAAlC,EAAAmC,cAACG,EAAAtC,EAAD,CAAMwC,WAAS,EAACD,QAAQ,SAASvD,QAAS,IACtCkD,EAAAlC,EAAAmC,cAACG,EAAAtC,EAAD,CAAMyC,MAAI,EAACE,GAAI,GACXT,EAAAlC,EAAAmC,cAAC8F,EAAAjI,EAAD,CAAO6C,UAAWZ,EAAQlD,OACtBmD,EAAAlC,EAAAmC,cAAA,qBACAD,EAAAlC,EAAAmC,cAAC+F,EAAAlI,EAAD,CACImD,MAAM,sBACNgF,WAAS,EACTC,QAASrG,KAAK8F,UACdQ,OAAQnG,EAAAlC,EAAAmC,cAAEmG,EAAAtI,EAAF,CAASuI,IAAM,UAAUC,IAAM,4DAEvC9C,UAAU,IACV7C,UAAWZ,EAAQ1C,OACvB2C,EAAAlC,EAAAmC,cAAC+F,EAAAlI,EAAD,CACImD,MAAM,sBACNgF,WAAS,EACTM,KAAK,UACL/C,UAAU,IACV7C,UAAWZ,EAAQ1C,kBA/ChCkE,aA+DJC,eAAQC,YARC,SAACpD,GAAD,MAAY,CAChChC,MAAOgC,EAAMqD,KAAKC,SAClB7B,gBAAiBzB,EAAMqD,KAAK5B,gBAC5B0G,WAAYnI,EAAMqD,KAAK8E,aAEA,SAAC3E,GAAD,MAAe,KAG2Ba,qBAAWlG,GAAjEgF,CAA6EiE,6CCxEtFd,GAAS,CACbC,QAAQ,CACNtH,OAAQ,WACRV,QAAQ,SA4BG6J,GAvBE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACb3G,EAAAlC,EAAAmC,cAAA,WACK0G,EAAMC,IAAK,SAAC9E,EAAM+E,GAAP,OACZ7G,EAAAlC,EAAAmC,cAAC8F,EAAAjI,EAAD,CAAOgJ,IAAKD,EAAGhG,MAAO8D,GAAOC,SAC3B5E,EAAAlC,EAAAmC,cAAC8G,GAAAjJ,EAAD,CAAaqD,QAAQ,KAAKqC,UAAU,MACnC1B,EAAKgC,OAIN9D,EAAAlC,EAAAmC,cAAC8G,GAAAjJ,EAAD,CAAY0F,UAAU,KACnB1B,EAAK4C,aAEN1E,EAAAlC,EAAAmC,cAAA,kBAAU6B,EAAKvD,UACfyB,EAAAlC,EAAAmC,cAAA,cAAM+G,KAAOlF,EAAKmF,WAAWC,kBCrBnCvC,GAAS,CACXC,QAAQ,CACNtH,OAAQ,WACRV,QAAQ,QAGViI,QAAQ,CACNjI,QAAQ,aAGRuK,8MACH9I,MAAQ,CACLsI,MAAO,GACPS,SAAS,KAGbC,SAAW,WACT5L,EAAM6L,IAAI1L,2CACTmG,KAAM,SAACC,GACLhD,EAAKC,SAAS,CACX0H,MAAO3E,EAAIC,KACXmF,SAAS,2FAMfvH,KAAKwH,4CAEE,IAAAlC,EACkBtF,KAAKxB,MAAvB+I,EADAjC,EACAiC,QAAST,EADTxB,EACSwB,MAChB,OAAK9G,KAAKH,MAAMI,gBAGbsH,EACM,aAGPpH,EAAAlC,EAAAmC,cAAA,OAAKU,UAAU,MAAME,MAAO8D,GAAOE,SACjC7E,EAAAlC,EAAAmC,cAAA,qBACAD,EAAAlC,EAAAmC,cAACsH,GAAD,CAAUZ,MAAOA,KARX3G,EAAAlC,EAAAmC,cAACC,EAAA,EAAD,CAAUC,GAAG,mBAtBPoB,aAyCLgD,eAAW9C,YANF,SAACpD,GAAD,MAAY,CAClCyB,gBAAiBzB,EAAMqD,KAAK5B,kBAEH,SAAC+B,GAAD,MAAe,IAGhBJ,CAA6C0F,KCrDjExC,GAAS,CACXC,QAAQ,CACNtH,OAAQ,WACRV,QAAQ,QAGViI,QAAQ,CACNjI,QAAQ,aA6CC4K,eAzCb,SAAAA,EAAY9H,GAAM,IAAAV,EAAA,OAAAE,OAAAwE,EAAA,EAAAxE,CAAAW,KAAA2H,IAChBxI,EAAAE,OAAAyE,EAAA,EAAAzE,CAAAW,KAAAX,OAAA0E,EAAA,EAAA1E,CAAAsI,GAAA3D,KAAAhE,KAAMH,KAMR+H,SAPkBvI,OAAAwI,EAAA,EAAAxI,CAAAyI,EAAA7J,EAAA8J,KAOP,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAA7J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSvC,MAAM,cADf,cACHkC,EADGG,EAAAG,KAAAH,EAAAE,KAAA,EAEUL,EAAIC,OAFd,OAEHA,EAFGE,EAAAG,KAGTpJ,EAAKC,SAAS,CACZoJ,MAAON,EACPX,SAAS,IAEXhF,QAAQC,IAAIrD,EAAKX,MAAMgK,OAPd,wBAAAJ,EAAAK,SAAAT,EAAAhI,SALTb,EAAKX,MAAQ,CACXgK,MAAO,GACPjB,SAAS,GAJKpI,oFAiBhBa,KAAK4H,4CAEE,IAAAtC,EACkBtF,KAAKxB,MAAvB+I,EADAjC,EACAiC,QAASiB,EADTlD,EACSkD,MAChB,OAAGjB,EACM,aAGPpH,EAAAlC,EAAAmC,cAAA,OAAKU,UAAU,MAAME,MAAO8D,GAAOE,SACjC7E,EAAAlC,EAAAmC,cAAA,sBACCoI,EAAMzB,IAAK,SAAClF,EAAMmF,GAAP,OACZ7G,EAAAlC,EAAAmC,cAAC8F,EAAAjI,EAAD,CAAOgJ,IAAKD,EAAGhG,MAAO8D,GAAOC,SAC3B5E,EAAAlC,EAAAmC,cAAC8G,GAAAjJ,EAAD,CAAaqD,QAAQ,KAAKqC,UAAU,MACjC9B,EAAKnD,UAERyB,EAAAlC,EAAAmC,cAAC8G,GAAAjJ,EAAD,CAAY0F,UAAU,KACnB9B,EAAKhD,kBAlCE6C,sDCTdoD,GAAS,CACXC,QAAQ,CACNtH,OAAQ,WACRV,QAAQ,QAGViI,QAAQ,CACNjI,QAAQ,aAGR2L,8MACJlK,MAAQ,CACJmK,WAAY,GACZC,UAAW,GACX/J,MAAO,GACPH,SAAU,GACVC,SAAU,GACVkK,WAAW,EACXC,SAAS,EACT/H,OAAO,2EAOT,OACEZ,EAAAlC,EAAAmC,cAAA,OAAKU,UAAU,MAAME,MAAO8D,GAAOE,SACjC7E,EAAAlC,EAAAmC,cAAA,8BAlBgBsB,aA2BTC,eAAQC,YAJC,SAACpD,GAAD,MAAY,CAClCyB,gBAAiBzB,EAAMqD,KAAK5B,kBAGkB,MAAjC0B,CAAwC+G,aCnCjDnB,GAAU,CACd9J,OAAQ,MACRsL,SAAU,QAGN9E,GAAQ,CACZ+E,UAAW,0BA+IEC,eA3Ib,SAAAA,EAAYpJ,GAAO,IAAAV,EAAA,OAAAE,OAAAwE,EAAA,EAAAxE,CAAAW,KAAAiJ,IACjB9J,EAAAE,OAAAyE,EAAA,EAAAzE,CAAAW,KAAAX,OAAA0E,EAAA,EAAA1E,CAAA4J,GAAAjF,KAAAhE,KAAMH,KA+CRb,aAAe,SAAAS,GAAI,OAAI,SAAA0F,GACrBhG,EAAKC,SAALC,OAAAE,EAAA,EAAAF,CAAA,GACGI,EAAO0F,EAAM3F,OAAOE,UAlDNP,EAsDnB8J,eAAiB,SAAAhK,GACf,IAAIiK,EAAe7G,aAAa8G,QAAQ,OACnB,OAAjBD,EACF/J,EAAKC,SAAS,CACZgK,aAAa,EACbrI,OAAO,KAGT9B,EAAEC,iBACFmK,IACGC,IACC,4BACA,CACE5K,SAAUS,EAAKX,MAAME,SACrBC,SAAUQ,EAAKX,MAAMG,UAEvB,CACE1C,QAAS,CAAEsN,cAAa,OAAAC,OAASN,MAGpChH,KAAK,SAAA7F,GAC0B,qBAA1BA,EAAS+F,KAAKqH,SAChBtK,EAAKC,SAAS,CACZsK,SAAS,EACT3I,OAAO,EACPqI,aAAa,MAIlBzG,MAAM,SAAA5B,GACLwB,QAAQC,IAAIzB,EAAM1E,SAAS+F,MAC3BjD,EAAKC,SAAS,CACZsK,SAAS,EACT3I,OAAO,EACPqI,aAAa,QArFrBjK,EAAKX,MAAQ,CACXE,SAAU,GACVC,SAAU,GACVyK,aAAa,EACbM,SAAS,EACT3I,OAAO,GARQ5B,mFAYC,IAAAwK,EAAA3J,KAClBA,KAAKZ,SAAS,CAAEgK,aAAa,IAE7B,IAAIF,EAAe7G,aAAa8G,QAAQ,OACnB,OAAjBD,EACFlJ,KAAKZ,SAAS,CACZgK,aAAa,EACbrI,OAAO,IAGTsI,IACG5B,IAAI,sBAAuB,CAC1BmC,OAAQ,CACNlL,SAAUsB,KAAKH,MAAMgK,MAAMD,OAAOlL,UAEpCzC,QAAS,CAAEsN,cAAa,OAAAC,OAASN,MAElChH,KAAK,SAAA7F,GAEJsN,EAAKvK,SAAS,CACZgK,aAAa,EACb1K,SAAUrC,EAAS+F,KAAK1D,SACxBC,SAAUtC,EAAS+F,KAAKzD,SACxBoC,OAAO,MAGV4B,MAAM,SAAA5B,GACLwB,QAAQC,IAAIzB,EAAM1E,SAAS+F,MAC3BuH,EAAKvK,SAAS,CACZgK,aAAa,EACbrI,OAAO,uCAoDR,IAAAuE,EACqDtF,KAAKxB,MAA/CG,GADX2G,EACC5G,SADD4G,EACW3G,UAAU+K,EADrBpE,EACqBoE,QAAS3I,EAD9BuE,EAC8BvE,MAAOqI,EADrC9D,EACqC8D,YAE5C,OAAIrI,EAEAZ,EAAAlC,EAAAmC,cAAA,WACED,EAAAlC,EAAAmC,cAAC0J,GAAA7L,EAAD,CAASgG,MAAOA,KAChB9D,EAAAlC,EAAAmC,cAAA,KAAGY,MAAOuG,IAAV,qEAMqB,IAAhB6B,EAEPjJ,EAAAlC,EAAAmC,cAAA,WACED,EAAAlC,EAAAmC,cAAC0J,GAAA7L,EAAD,CAASgG,MAAOA,KAChB9D,EAAAlC,EAAAmC,cAAA,KAAGY,MAAOuG,IAAV,0BAGqB,IAAhB6B,IAAqC,IAAZM,EAC3BvJ,EAAAlC,EAAAmC,cAACC,EAAA,EAAD,CAAUC,GAAI,gBACI,IAAhB8I,EAEPjJ,EAAAlC,EAAAmC,cAAA,WACED,EAAAlC,EAAAmC,cAAC0J,GAAA7L,EAAD,CAASgG,MAAOA,KAChB9D,EAAAlC,EAAAmC,cAAA,QAAMU,UAAU,eAAeG,SAAUjB,KAAKiJ,gBAC5C9I,EAAAlC,EAAAmC,cAACc,EAAAjD,EAAD,CACEkD,GAAG,WACHC,MAAM,WACN1B,MAAOf,EACP0C,SAAUrB,KAAKhB,aAAa,YAC5BuC,KAAK,aAEXpB,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,CAASqD,QAAQ,WAAWC,KAAK,UAAjC,uBAZG,SArHkBG,aCAvBoD,GAAS,CACbC,QAAS,CACLtH,OAAQ,WACRV,QAAS,QAEbiI,QAAS,CACLjI,QAAS,YAGbkI,MAAO,CACHnH,MAAO,UAMPiM,eACJ,SAAAA,IAAc,IAAA5K,EAAA,OAAAE,OAAAwE,EAAA,EAAAxE,CAAAW,KAAA+J,IACZ5K,EAAAE,OAAAyE,EAAA,EAAAzE,CAAAW,KAAAX,OAAA0E,EAAA,EAAA1E,CAAA0K,GAAA/F,KAAAhE,QA0CFhB,aAAe,SAAAS,GAAI,OAAI,SAAA0F,GACrBhG,EAAKC,SAALC,OAAAE,EAAA,EAAAF,CAAA,GACGI,EAAO0F,EAAM3F,OAAOE,UA7CXP,EAiDd8J,eAAiB,SAAAhK,GACfA,EAAEC,iBADkB,IAAAoG,EAESnG,EAAKX,MAE5BoB,EAAQ,CACZlB,SALkB4G,EAEb5G,SAGKC,SALQ2G,EAEH3G,UAOjBQ,EAAKU,MAAMmK,WAAWpK,IAvDtBT,EAAKX,MAAQ,CACXE,SAAU,GACVC,SAAU,GACVsL,gBAAiB,GACjBC,QAAQ,EACRrB,WAAW,EACX9H,OAAO,GATG5B,sNAgBNkK,IACH5B,IAAI,mBAAoB,CACvBmC,OAAQ,CACNO,mBAAoBnK,KAAKH,MAAMgK,MAAMD,OAAOpN,SAG/C0F,KAAK,SAAA7F,GACJkG,QAAQC,IAAInG,GACkB,6BAA1BA,EAAS+F,KAAKqH,SAChBE,EAAKvK,SAAS,CACZV,SAAUrC,EAAS+F,KAAK1D,SACxBwL,QAAQ,EACRrB,WAAW,EACX9H,OAAO,MAIZ4B,MAAM,SAAA5B,GACLwB,QAAQC,IAAIzB,EAAM1E,SAAS+F,MAC3BuH,EAAKvK,SAAS,CACZ8K,QAAQ,EACRrB,WAAW,EACX9H,OAAO,yIAgDN,IAAAqJ,EACyCpK,KAAKxB,MAA7CG,EADDyL,EACCzL,SADDyL,EACWrJ,MADXqJ,EACkBvB,UADlBuB,EAC6BV,QAGlC,OACEvJ,EAAAlC,EAAAmC,cAAA,OAAKU,UAAU,MAAME,MAAO8D,GAAOE,SAClC7E,EAAAlC,EAAAmC,cAAA,8BAECJ,KAAKH,MAAM6J,SACTvJ,EAAAlC,EAAAmC,cAAA,WACED,EAAAlC,EAAAmC,cAAA,SACCJ,KAAKH,MAAM6J,UAMhBvJ,EAAAlC,EAAAmC,cAAA,QAAMU,UAAU,gBAAgBG,SAAUjB,KAAKiJ,gBAC7C9I,EAAAlC,EAAAmC,cAACc,EAAAjD,EAAD,CACEkD,GAAG,WACHC,MAAM,WACNJ,MAAO8D,GAAOG,MACd5D,SAAUrB,KAAKhB,aAAa,YAC5BU,MAAOf,EACP4C,KAAK,aAETpB,EAAAlC,EAAAmC,cAAA,WACAD,EAAAlC,EAAAmC,cAAA,WACAD,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,CAAQb,MAAM,UAAUkE,QAAQ,WAAWC,KAAK,UAAhD,4BAnHkBG,aA2IbgD,eAAW9C,YAZF,SAACpD,GAAD,MAAY,CAElCkL,QAASlL,EAAMmH,QAAQuE,OACvBrB,UAAWrK,EAAMmH,QAAQkD,YAKA,SAAC7G,GAAD,MAAe,CACxCqI,MAAO,kBAAMrI,EVxCX,eAAAsI,EAAAjL,OAAAwI,EAAA,EAAAxI,CAAAyI,EAAA7J,EAAA8J,KAAO,SAAAwC,EAAOvI,GAAP,OAAA8F,EAAA7J,EAAAkK,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EACG1M,EACD6L,IAAI,mBAAoB,CACrBmC,OAAQ,CACJO,4BAAyBtK,MAAMgK,MAAMD,OAAOpN,SAGnD0F,KAAK,SAAA7F,GACFkG,QAAQC,IAAInG,GACkB,6BAA1BA,EAAS+F,KAAKqH,SACdzH,EAAS,CAAET,KA1HV,YA6HNoB,MAAM,SAAAC,GACLL,QAAQC,IAAII,EAAIvG,SAAS+F,MACzBJ,EAAS,CAAET,KA9HD,aA8HmBqB,UAflC,wBAAA4H,EAAA/B,SAAA8B,EAAAvK,SAAP,gBAAAyK,GAAA,OAAAH,EAAAI,MAAA1K,KAAA2K,YAAA,KUyCFX,WAAY,SAACpK,GAAD,OAAWoC,EVxDC,SAACpC,GACvB,OAAQ,SAACoC,GACLpG,EAAM0N,IAAI,oCAAqC,CAC3C5K,SAAUkB,EAAMlB,SAChBC,SAAUiB,EAAMjB,WACjBuD,KAAK,SAAA7F,GAEJkG,QAAQC,IAAInG,GACZ2F,EAAS,CAACT,KAvGI,aAuGa3B,YAC3B+C,MAAM,SAAAC,GACNZ,EAAS,CAACT,KAxGS,kBAwGaqB,WU8CVoH,CAAWpK,OAEnBgC,CAA6CmI,KCnJ1DtH,GAAUmI,aAAqB,CAACC,cAAc,IAGrDC,GAAS,SAAC7L,GACZA,EAAEC,iBACFtD,EAAM6L,IAAI1L,yCAA8B,CAACC,iBAAiB,IACrDkG,KAAK,SAAAC,GAEiB,MAAfA,EAAI4I,SACJ1I,aAAa2I,WAAW,QACxB3I,aAAa2I,WAAW,UACxBvI,GAAQC,KAAK,QAGpBC,MAAM,SAAAC,GAEHP,aAAa2I,WAAW,QACvB3I,aAAa2I,WAAW,UACzBvI,GAAQC,KAAK,QA0HVf,eAAQC,YAjBC,SAACpD,GAAD,MAAY,CAChChC,MAAOgC,EAAMqD,KAAKC,SAAUmJ,WAAYzM,EAAMqD,KAAKoJ,WAEnDhL,gBAAiBzB,EAAMqD,KAAK5B,kBAGL,SAAC+B,GAAD,MAAe,KAW2Ba,qBAAWlG,GAAjEgF,CAtHA,SAAAkF,GAAA,IAAE3G,EAAF2G,EAAE3G,QAASD,EAAX4G,EAAW5G,gBAAX,OAEXE,EAAAlC,EAAAmC,cAAC8K,EAAA,EAAD,CAAQzI,QAASA,IAEbtC,EAAAlC,EAAAmC,cAAA,OAAKU,UAAWZ,EAAQ5B,SAEpB6B,EAAAlC,EAAAmC,cAAC0J,GAAA7L,EAAD,CAAQkN,SAAS,SAASrK,UAAWZ,EAAQkL,QACzCjL,EAAAlC,EAAAmC,cAACiL,GAAApN,EAAD,KAEIkC,EAAAlC,EAAAmC,cAAC8G,GAAAjJ,EAAD,CAAYqD,QAAQ,KAAKlE,MAAM,WAA/B,0BAIA+C,EAAAlC,EAAAmC,cAAC8G,GAAAjJ,EAAD,CAAYqN,WAAW,UAAUxK,UAAWZ,EAAQ9B,SAE9C6B,GAEEE,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,KACIkC,EAAAlC,EAAAmC,cAAC2C,EAAA,EAAD,CAAMzC,GAAG,IAAIQ,UAAWZ,EAAQnC,cAAhC,SAMPkC,GACGE,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,KACIkC,EAAAlC,EAAAmC,cAAC2C,EAAA,EAAD,CAAMjC,UAAWZ,EAAQnC,aAAcuC,GAAG,UAA1C,WAONL,GAEEE,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,KACIkC,EAAAlC,EAAAmC,cAAC2C,EAAA,EAAD,CAAMzC,GAAG,UAAUQ,UAAWZ,EAAQnC,cAAtC,aAONkC,GAEEE,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,KACIkC,EAAAlC,EAAAmC,cAAC2C,EAAA,EAAD,CAAMzC,GAAG,UAAUQ,UAAWZ,EAAQnC,cAAtC,YAOPkC,GACGE,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,KACIkC,EAAAlC,EAAAmC,cAAC2C,EAAA,EAAD,CAAMjC,UAAWZ,EAAQnC,aAAcuC,GAAG,SAA1C,aAOPL,GACGE,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,KACIkC,EAAAlC,EAAAmC,cAAC2C,EAAA,EAAD,CAAMzC,GAAG,aAAaQ,UAAWZ,EAAQnC,cAAzC,cAOPkC,GACGE,EAAAlC,EAAAmC,cAACoB,EAAAvD,EAAD,CAAQoI,QAASyE,IAAjB,aAYhB3K,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAU9H,UAAWxF,IACvCgC,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI9H,UAAWiC,KACjCzF,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAU9H,UAAWzF,IACvCiC,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQ9H,UAAWC,IACrCzD,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAAS9H,UAAW2D,KACtCnH,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOE,KAAK,UAAU9H,UAAWuB,IACjC/E,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOE,KAAK,SAAS9H,UAAWgE,KAChCxH,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAClBtL,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAa9H,UAAW+E,KAC1CvI,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOE,KAAK,UACZtL,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOE,KAAK,gBAAgB9H,UAAWoG,KACvC5J,EAAAlC,EAAAmC,cAACmL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,4BAA4B9H,UAAWsF,8BCjI/DyC,eACJ,SAAAA,EAAY7L,GAAM,IAAAV,EAAA,OAAAE,OAAAwE,EAAA,EAAAxE,CAAAW,KAAA0L,IAChBvM,EAAAE,OAAAyE,EAAA,EAAAzE,CAAAW,KAAAX,OAAA0E,EAAA,EAAA1E,CAAAqM,GAAA1H,KAAAhE,KAAMH,KACDrB,MAAQ,CACXqD,KAAM,GACN5B,iBAAiB,GAJHd,oFAQlB,GAAyB,MAArBkD,aAAasJ,KAAc,CAE7BpP,EAAa8F,aAAasJ,MAC1B,IAAMnP,EAAQ6F,aAAa8G,QAAQ,QAE7ByC,EAAUC,KAAWrP,GAG3BwD,KAAKH,MAAMiM,eAAeF,qCAKnB,IAAA7L,EAC8BC,KAAKH,MADnCE,EACCG,QADDH,EACUE,gBACjB,OACEE,EAAAlC,EAAAmC,cAAA,OAAKU,UAAU,OACbX,EAAAlC,EAAAmC,cAAC2L,GAAD,cA1BUrK,aAuCHC,eAAQC,YARC,SAACpD,GAAD,MAAY,CAClCyB,gBAAiBzB,EAAMqD,KAAK5B,gBAC5B+L,IAAKxN,EAAMqD,KAAKmK,MAES,SAAChK,GAAD,MAAe,CACxCiK,QAAS,kBAAMjK,EZqBb,eAAA6E,EAAAxH,OAAAwI,EAAA,EAAAxI,CAAAyI,EAAA7J,EAAA8J,KAAO,SAAAC,EAAOhG,EAAUkK,GAAjB,IAAAjE,EAAA7F,EAAA,OAAA0F,EAAA7J,EAAAkK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACa1M,EAAM6L,IAAI,0BAA2B,CACnDzL,gBAAiB,gBAFhB,OACCiM,EADDG,EAAAG,KAKCnG,EADW6F,EACK7F,KAAKuJ,KAC3BpJ,QAAQC,IAAIJ,GACZC,aAAaC,QAAQ,SAAUF,GAC/BJ,EAAS,CAACT,KAxDgB,mBAwDQa,SAR7B,wBAAAgG,EAAAK,SAAAT,EAAAhI,SAAP,gBAAAmM,EAAAC,GAAA,OAAAvF,EAAA6D,MAAA1K,KAAA2K,YAAA,KYpBFmB,eAAgB,kBAAM9J,EZNb,CACHT,KAxBgB,WAyBhB8K,QAAST,IAHa,IAAAA,MYSuC/I,qBAAWlG,GAAjEgF,CAA6E+J,ICtCxEY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5C,MACvB,yECfA6C,GAAe,CACjB3K,UAAW,KACX9B,gBAAgBoC,aAAa8G,QAAQ,QACrC8B,WAAW5I,aAAa8G,QAAQ,WAChC3M,MAAO,KACPqF,KAAM,GACNmK,IAAI3J,aAAa8G,QAAQ,UACzBwD,aAAc,MCRZD,GAAe,CACjBzK,KAAM,GACN0C,UAAW,MCHT+H,GAAe,CACjBjH,WAAW,EACXF,kBAAmB,KACnBC,cAAc,KACd9G,SAAU,KACVwL,OAAQ,KACRrB,WAAW,EACX9H,OAAO,EACP6L,aAAc,MCGHC,GANKC,YAAgB,CAChCjL,KHOW,WAAkC,IAAjCrD,EAAiCmM,UAAAoC,OAAA,QAAAC,IAAArC,UAAA,GAAAA,UAAA,GAAzB+B,GAAcO,EAAWtC,UAAAoC,OAAA,EAAApC,UAAA,QAAAqC,EAC7C,OAAQC,EAAO1L,MACX,IdXgB,WcaZ,OADJgB,QAAQC,IAAIyK,EAAOZ,SACRhN,OAAAC,EAAA,EAAAD,CAAA,GACAb,EADP,CAEIqD,KAAKoL,EAAOpL,KACZrF,MAAOyQ,EAAOZ,QACdpM,gBAAgBgN,EAAOhN,kBAE/B,IdlBgB,WcmBZ,OAAAZ,OAAAC,EAAA,EAAAD,CAAA,GACOb,EADP,CAEIuD,UAAUkL,EAAOrK,IAAIvG,SAAS+F,OAGtC,IdXgB,WcYZ,OAAA/C,OAAAC,EAAA,EAAAD,CAAA,GACOb,GAGX,IdfwB,mBcgBpB,OAAAa,OAAAC,EAAA,EAAAD,CAAA,GACOb,EADP,CAEIwN,IAAKiB,EAAO7K,KAAK4J,MAGzB,IdlCe,ccmCX,OAAA3M,OAAAC,EAAA,EAAAD,CAAA,GACOb,EADP,CAEIqD,KAAKoL,EAAOpL,KACZrF,MAAOyQ,EAAOZ,UAEtB,IdvCgB,WcwCZ,OAAAhN,OAAAC,EAAA,EAAAD,CAAA,GACOb,EADP,CAEIuD,UAAUkL,EAAOrK,IAAIvG,SAAS+F,OAItC,QACI,OAAO5D,IG/CfyD,KFDW,WAAkC,IAAjCzD,EAAiCmM,UAAAoC,OAAA,QAAAC,IAAArC,UAAA,GAAAA,UAAA,GAAzB+B,GAAcO,EAAWtC,UAAAoC,OAAA,EAAApC,UAAA,QAAAqC,EAC7C,OAAQC,EAAO1L,MACX,IfAiB,YeCb,OAAOlC,OAAAC,EAAA,EAAAD,CAAA,GACAb,EADP,CAEIyD,KAAKgL,EAAOhL,OAGpB,IfLiB,YeMb,OAAA5C,OAAAC,EAAA,EAAAD,CAAA,GACOb,EADP,CAEImG,UAAWsI,EAAOrK,IAAIvG,SAAS+F,OAGvC,QACI,OAAO5D,IEbfmH,QDEW,WAAkC,IAAjCnH,EAAiCmM,UAAAoC,OAAA,QAAAC,IAAArC,UAAA,GAAAA,UAAA,GAAzB+B,GAAcO,EAAWtC,UAAAoC,OAAA,EAAApC,UAAA,QAAAqC,EAC7C,OAAQC,EAAO1L,MACX,IhBAc,SgBCV,OAAOlC,OAAAC,EAAA,EAAAD,CAAA,GACAb,EADP,CAEIiH,WAAU,EACVF,kBAAkB,wBAE1B,IhBLkB,agBMd,OAAAlG,OAAAC,EAAA,EAAAD,CAAA,GACOb,EADP,CAEIiH,WAAW,EACXF,kBAAmB,GACnBC,eAAe,IAEvB,IhBXa,QgBYT,OAAAnG,OAAAC,EAAA,EAAAD,CAAA,GACOb,EADP,CAEIE,SAASuO,EAAOrN,MAAMlB,SACtBwL,QAAQ,EACRrB,WAAW,EACX9H,OAAO,IAEf,IhBlBkB,agBmBd,OAAA1B,OAAAC,EAAA,EAAAD,CAAA,GACOb,EADP,CAEI0L,QAAQ,EACRrB,WAAW,EACX9H,OAAO,IAEf,IhBxBkB,agByBd,OAAA1B,OAAAC,EAAA,EAAAD,CAAA,GACOb,EADP,CAEI0L,OAAQ,yEACRnJ,OAAO,IAEf,IhB7BuB,kBgB8BnB,OAAA1B,OAAAC,EAAA,EAAAD,CAAA,GACOb,EADP,CAEI0L,OAAQ,wBACRnJ,OAAO,IAEf,QACI,OAAOvC,MEzCb5B,GAAQsQ,yBAAe,CAC3B7P,QAAS,CACP8P,QAAS,CACLC,MAAO,UACPC,KAAM,WAEV9P,UAAW,CACT8P,KAAM,cAONC,GAF4BC,YAAgBC,KAAhBD,CAAuBE,IAE3CC,CAA0Bb,IAExCc,IAASC,OACTzN,EAAAlC,EAAAmC,cAACyN,EAAA,EAAD,CAAUP,MAAOA,IACbnN,EAAAlC,EAAAmC,cAAC8K,EAAA,EAAD,KACI/K,EAAAlC,EAAAmC,cAAC0N,EAAA,iBAAD,CAAkBlR,MAASA,IACvBuD,EAAAlC,EAAAmC,cAAC2N,GAAD,SAGCC,SAASC,eAAe,SL6F/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlM,KAAK,SAAAmM,GACjCA,EAAaC","file":"static/js/main.1375a3bc.chunk.js","sourcesContent":["import Axios from 'axios'\n\nlet AxiosInstance = Axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  withCredentials: true,\n  headers : {\n    'Content-Type' : 'application/json',\n    'Accept' : 'application/json',\n  }\n\n})\n\n\n\nAxiosInstance.interceptors.response.use(function(response) {\n  // const token = localStorage.getItem('auth');\n  // response.headers.Authorization =  token ? `Bearer ${token}` : '';\n  // console.log(token);\n  return response;\n})\n\nexport default AxiosInstance\n\n\n","import Axios from './Axios';\n\nconst setAuthToken = token => {\n    if (token) {\n      // Apply to every request\n        Axios.defaults.headers.common['Authorization'] = token;\n    } else {\n      // Delete auth header\n        delete Axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport default setAuthToken;","const ourStyles = theme => ({\n    root: {\n        flexGrow: 1,\n        padding: 10\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary\n    },\n    chip: {\n        margin: theme.spacing.unit\n    },\n    button: {\n        marginLeft: 10,\n        margin: 0,\n        flexGrow: 1,\n        display:'inline-block',\n      \n    },\n    box:{\n        width:'500px'\n    },\n    rightToolbar: {\n        color: '#fff',\n        textDecoration: 'none',\n        a: {\n            color: '#fff'\n\n        }\n    },\n    signIn:{\n        margin:'40px',\n        padding:0,\n        flexGrow: 1,\n    },\n    signUp:{\n        margin:'40px',\n        padding:0,\n        flexGrow: 1,\n       \n\n    },\n    rightt: {\n        marginLeft: 'auto',\n        marginRight: 24\n    },\n    navRoot: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: 16,\n        marginLeft: -12\n    }\n    \n});\n\nexport default ourStyles;","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {connect} from 'react-redux';\nimport {withStyles} from '@material-ui/core/styles';\nimport {register} from '../../actions/';\nimport {Redirect, withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\nimport ourStyles from '../../styles/ourStyles';\nclass signUp extends Component {\n        state = {\n            formData: {\n                username: \"\",\n                password: \"\",\n                passwordConf: \"\",\n                email: \"\"\n            },\n            passErr: \"\",\n            regSuccess: false\n        }\n  \n    handleChange = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        this.setState({\n            formData: {\n                ...formData,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        const {username, email, password, passwordConf} = formData;\n        this.setState({\n            username: this.state.username,\n            password: this.state.password,\n            passwordConf: this.state.passwordConf,\n            email: this.state.email\n        });\n        const creds = {\n            username,\n            email,\n            password\n        }\n        if (password === passwordConf) {\n            this.props.register(creds);\n        } else {\n            this.setState({passErr: \"Passwords Don't Match\"})\n        }\n    }\n    render() {\n        const {isAuthenticated, classes} = this.props\n        if (isAuthenticated) {\n            return <Redirect to='/dashboard'/>\n        }\n        return (\n            <Grid justify=\"center\" container >\n                <Grid item xs={12} sm={10} md={5} >\n                    <div className={classes.signUp}>\n                        {this.props.error && (\n                            <div\n                                style={{\n                                color: 'red'\n                            }}>\n                                {this.props.error}\n                            </div>\n                        )}\n                        {this.state.passErr && (\n                            <div\n                                style={{\n                                color: 'red'\n                            }}>\n                                {this.state.passErr}\n                            </div>\n                        )}\n                        <h1>Sign Up</h1>\n                        <form onSubmit={this.handleSubmit}>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Username\"\n                                    style={{width: '100%' }}\n                                    name=\"username\"\n                                    value={this.state.username}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Email\"\n                                    className=\"\"\n                                    style={{width: '100%' }}\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    style={{width: '100%' }}\n                                    className=\"\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Confirm Password\"\n                                    name=\"passwordConf\"\n                                    type=\"password\"\n                                    style={{width: '100%' }}\n                                    className=\"\"\n                                    value={this.state.passwordConf}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <Button m={2}variant=\"outlined\" color=\"primary\" type=\"submit\">\n                                    Sign Up\n                                </Button>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, \n    isAuthenticated: state.user.isAuthenticated, \n    error: state.user.authError\n})\nconst mapDispatchToProps = (dispatch) => ({\n    register: (user) => dispatch(register(user))\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(signUp);","import axios from 'axios';\nimport { history } from '../components/layout/Navbar';\nimport Axios from '../Axios';\n\nimport setAuthToken from '../setAuthToken';\nexport const SET_USER = \"SET_USER\";\nexport const LOG_FAIL = \"LOG_FAIL\";\nexport const REG_SUC = \"REG_SUCCESS\";\nexport const REG_FAIL = \"REG_FAIL\";\nexport const POST_SUCC = \"POST_SUCC\";\nexport const POST_FAIL = \"POST_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\nexport const FORGOT = \"FORGOT\";\nexport const FORGOT_ERR = \"FORGET_ERR\";\nexport const RESET = \"RESET\";\nexport const RESET_FAIL = \"RESET_FAIL\";\nexport const UPDATEPASS = \"UPDATEPASS\";\nexport const UPDATEPASS_FAIL = \"UPDATEPASS_FAIL\";\nexport const GET_USER = \"GET_USER\";\nexport const GET_CURRENT_USER = \"GET_CURRENT_USER\";\n\n// Were using a custom Axios because the base url is consistent with the express server port 8000.\n// if we used \"axios\" it would use port:8001, which is consistent with the express server.\nexport const logIn =  (user) => { \n    return (dispatch) => {\n        Axios.post('/api/users/loginUser',{\n            username: user.username,\n            password: user.password,\n        }).then( (res) => {\n            const token = res.data.token;\n            localStorage.setItem('auth', token);\n            setAuthToken(token);\n            history.push('/dashboard');\n            dispatch({type: SET_USER, user});\n        }).catch((err)=> {\n            dispatch({type:  LOG_FAIL, err});\n            console.log(err.response.data); // not even showing err console.\n        })\n    }\n}\nexport const setCurrentUser = decoded => {\n    return {\n        type: GET_USER,\n        payload: decoded\n    };\n};\nexport const register = (user) => { \n    return (dispatch) => {\n        Axios.post('/api/users/new', {\n            username: user.username,\n            password: user.password,\n            email: user.email \n        }).then( (res) => {\n            // signs user in once registered\n            const token = res.data.token;\n            localStorage.setItem('auth', token);\n            setAuthToken(token);\n            console.log(res.data);\n            history.push('/dashboard');\n            dispatch({type: REG_SUC, user});\n        }).catch((err)=> {\n            dispatch({type:  REG_FAIL, err});\n            console.log(err.response.data); // shows console.log for this though.\n        })\n    }\n}\nexport const getUser = () => {\n    return async (dispatch, getState) => {\n      const url = await Axios.get('/api/users/current_user', {\n          withCredentials: 'same-origin'\n      });\n      const response = url;\n      const data = response.data.auth;\n      console.log(data);\n      localStorage.setItem('myAuth', data)\n      dispatch({type: GET_CURRENT_USER, data})\n    }\n}\nexport const newPost = (post, req) => { \n    return (dispatch) => {\n        Axios.post('/api/posts/newPost' ,{\n            title: post.title,\n            post_content: post.postContent\n        }).then( (res) => {\n            // console.log('success')\n            history.push('/Posts');\n            dispatch({type: POST_SUCC, post});\n        }).catch((err)=> {\n            dispatch({type:  POST_FAIL, err});\n            console.log(err.response.data); // shows console.log for this though.\n        })\n    }\n}\nexport const Forget = (creds)  => {\n    return  (dispatch) =>{\n       Axios.post('/api/users/forgotPassword',{\n            email: creds.email\n        }).then(response => {\n            console.log(creds.email);\n            console.log(response.data);\n            if (response.data === 'recovery email sent') {\n                 dispatch({type:FORGOT, creds});     \n            }\n         }).catch(err => {\n            console.log(err.response.data);\n            if (err.response.data === 'email not in db') {\n                dispatch({type:FORGOT_ERR, err});  \n            }\n         });\n    }\n}\nexport const updatePass = (creds)  => {\n    return  (dispatch) =>{\n        Axios.put('/api/users/updatePasswordViaEmail', {\n            username: creds.username,\n            password: creds.password,\n        }).then(response => {\n            // console.log(creds.username);\n            console.log(response);\n            dispatch({type:UPDATEPASS, creds});            \n         }).catch(err => {\n            dispatch({type:UPDATEPASS_FAIL, err});       \n         });\n    }\n}\nexport const Reset = () => {\n    return async (dispatch) =>{\n        await Axios\n            .get('/api/users/reset', {\n                params: {\n                    resetPasswordToken: this.props.match.params.token,\n                },\n            })\n            .then(response => {\n                console.log(response);\n                if (response.data.message === 'password reset link a-ok') {\n                    dispatch({ type: RESET});\n                }\n              })\n              .catch(err => {\n                console.log(err.response.data);\n                dispatch({ type: RESET_FAIL, err});\n              });\n    }\n}\n","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport {withStyles} from '@material-ui/core/styles';\n// import axios from 'axios';\nimport {withRouter, Redirect} from 'react-router-dom'\n// import { history } from '../components/Navbar';\nimport {connect} from 'react-redux';\nimport {logIn} from '../../actions/';\nimport {compose} from 'redux';\nimport {Link} from 'react-router-dom';\nimport ourStyles from '../../styles/ourStyles';\nconst MyLink = props => <Link to=\"/Forgot\" {...props}/>\nclass signIn extends Component {\n       state = {\n            formData: {\n                username: \"\",\n                password: \"\"\n            },\n            loggedEmail: \"\",\n            loginError: \"\",\n            myToken: \"\",\n            userLoggedIn: false,\n            emailBlank: true,\n            passwordBlank: true,\n            emailInvalid: false,\n            passwordInValid: false,\n            // token:localStorage.getItem('JWT')\n        }\n    \n    handleChange = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        this.setState({\n            formData: {\n                ...formData,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {formData} = this.state;\n        const {username, password} = formData;\n        const creds = {\n            username,\n            password\n        }\n        this\n            .props\n            .logIn(creds);\n        console.log(creds);\n    }\n    render() {\n        const {classes} = this.props;\n        if (this.props.isAuthenticated) {\n            return (<Redirect to=\"/dashboard\"/>);\n        }\n        return (\n        <div className={classes.signIn}>\n            <Grid justify=\"center\"  container >\n                <Grid item xs={12} sm={'auto'} md={4} >   \n                        {this.props.error && (\n                            <div\n                                style={{\n                                color: 'red'\n                            }}>\n                                {this.props.error}\n                            </div>\n                        )}\n                        <h1>Sign In</h1>\n                        <form onSubmit={this.handleSubmit}>\n                                <TextField\n                                    id=\"outlined-name2\"\n                                    label=\"Username\"\n                                    className=\"\"\n                                    fullWidth\n                                    name=\"username\"\n                                    value={this.state.username}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <TextField\n                                    id=\"outlined-name\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    fullWidth\n                                    className=\"\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"/>\n                                <br></br>\n                                <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n                                    Log In\n                                </Button>\n                                <Button\n                                    component={MyLink}\n                                    variant=\"outlined\"\n                                    type=\"submit\"\n                                    className={classes.button}>\n                                    Forgot Password ?\n                                </Button>\n                        </form>\n                </Grid>\n            </Grid>\n        </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, \n    isAuthenticated: state.user.isAuthenticated,\n    error: state.user.authError\n});\nconst mapDispatchToProps = (dispatch) => ({\n    logIn: (user) => dispatch(logIn(user))\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(signIn);","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {connect} from 'react-redux';\nimport {newPost} from '../actions/';\nimport { withRouter, Redirect} from 'react-router-dom';\nclass Post extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            formData: {\n                title: \"\",\n                postContent: \"\",\n                userId: \"\"\n            },\n            passErr: \"\",\n            regSuccess: false\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount(){\n        console.log(this.props.token);\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n\n        const {formData} = this.state;\n\n        this.setState({\n            formData: {\n                ...formData,\n                [e.target.name]: e.target.value\n            }\n        });\n\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const {formData} = this.state;\n        const {title, postContent} = formData;\n        this.setState({title: this.state.title, postContent: this.state.postContent});\n\n        const creds = {\n            title,\n            postContent\n        }\n\n        this\n            .props\n            .newPost(creds);\n        console.log(creds);\n    }\n\n    render() {\n  \n        if (!this.props.isAuthenticated) {\n            return (<Redirect to='/signIn' />);\n        }\n        return (\n            <div style={{\n                padding: '20px 100px'\n            }}>\n\n                {this.props.error && (\n                    <div style={{\n                        color: 'red'\n                    }}>\n                        {this.props.error}\n                    </div>\n                )}\n\n                {this.state.passErr && (\n                    <div style={{\n                        color: 'red'\n                    }}>\n                        {this.state.passErr}\n                    </div>\n                )}\n\n                <h1>New Post</h1>\n\n                <form onSubmit={this.handleSubmit}>\n\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"Title\"\n                        style={{\n                        width: 560\n                    }}\n                        name=\"title\"\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                        margin=\"normal\"\n                        variant=\"outlined\"/>\n                    <br></br>\n                    <TextField\n                        id=\"outlined-multiline-static\"\n                        label=\"Post Content\"\n                        name=\"postContent\"\n                        multiline\n                        style={{\n                        width: 560\n                    }}\n                        rows=\"4\"\n                        value={this.state.postContent}\n                        onChange={this.handleChange}\n                        defaultValue=\"\"\n                        margin=\"normal\"\n                        variant=\"outlined\"/>\n                    <br></br>\n                    <br></br>\n\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n\n                </form>\n\n            </div>\n\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, \n    error: state.post.postError,\n    isAuthenticated: state.user.isAuthenticated\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    newPost: (post) => dispatch(newPost(post))\n\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Post));","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {Forget} from '../../actions/';\nconst Styles = {\n    myPaper: {\n        margin: '20px 0px',\n        padding: '20px'\n    },\n    wrapper: {\n        padding: '0px 60px'\n    },\n    textF: {\n        width: '500px'\n    }\n}\nclass Forgot extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.sendEmail = this.sendEmail.bind(this);\n    }\n    handleChange = name => event => {\n        this.setState({[name]: event.target.value});\n    };\n    sendEmail = e => {\n        e.preventDefault();\n        const { email } = this.state\n        const creds = {\n            email\n        }\n        console.log(creds);\n        this.props.Forget(creds);\n    };\n    render() {\n        const {email, messageFromServer, showNullError, showError} = this.state;\n        return (\n            <div className=\"App\" style={Styles.wrapper}>\n                <h1> Forgot Password</h1>\n                {this.props.showError && (\n                  <div>\n                    <p>\n                      That email address isn't recognized. Please try again or register\n                      for a new account.\n                    </p>\n                  </div>\n                )}\n                {this.props.messageFromServer === 'recovery email sent' && (\n                    <div>\n                        <h3>Password Reset Email Successfully Sent!</h3>\n                    </div>\n                )}\n                <form className=\"profile-form\" onSubmit={this.sendEmail}>\n                    <TextField\n                        id=\"email\"\n                        label=\"Email\"\n                        style={Styles.textF}\n                        value={email}\n                        onChange={this.handleChange('email')}\n                        placeholder=\"Email Address\"/>\n                    <br></br>\n                    <br></br>\n                    <Button variant=\"outlined\" type=\"submit\">\n                        Send Password Reset Email\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    // token: state.user.getToken, \n    // error: state.post.postError\n    showError: state.account.showError,\n    messageFromServer: state.account.messageFromServer\n})\nconst mapDispatchToProps = (dispatch) => ({\n    Forget: (creds) => dispatch(Forget(creds))\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Forgot));","import React, {Component} from 'react';\n// import axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport {withStyles} from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {Redirect} from 'react-router-dom';\nimport ourStyles from '../styles/ourStyles';\nimport github from './github/github';\nimport Axios from '../Axios';\nimport { history } from '../components/layout/Navbar';\nclass Home extends Component {\n      state = {\n        user: \"\"\n\n      }\n        \n    \n    componentWillMount = () => {\n        // this.fetchData();\n    }\n    fetchData = () => {\n        // experiementing not actually anything useful.\n        fetch(process.env.REACT_APP_BASE_GITHUB_SIGNIN, { \n            method: \"GET\",\n            mode: 'cors'\n            })\n            .then( (res)=> {\n                console.log(res)\n                // history.push('/dashboard')   \n            })\n            .catch( (err) => {\n            })\n    }\n    render() {\n        const {classes} = this.props;\n        if (this.props.isAuthenticated) {\n            return (<Redirect to='/dashboard' />);\n        }\n        return (\n            <div className={classes.root}>\n                <Grid container justify=\"center\" spacing={44}>\n                    <Grid item sm={7}>\n                        <Paper className={classes.paper}>\n                            <h1>Sign Up</h1>\n                            <Chip\n                                label=\"Sign In with Github\"\n                                clickable\n                                onClick={this.fetchData}\n                                avatar={< Avatar alt = \"Natacha\" src = \"https://avatars0.githubusercontent.com/u/9919?s=280&v=4\" />}\n                                // href={process.env.REACT_APP_BASE_GITHUB_SIGNIN}\n                                component=\"a\"\n                                className={classes.chip}/>\n                            <Chip\n                                label=\"Sign Up with E-Mail\"\n                                clickable\n                                href=\"/signUp\"\n                                component=\"a\"\n                                className={classes.chip}/>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken,\n    isAuthenticated: state.user.isAuthenticated,\n    redirectTo: state.user.redirectTo\n})\nconst mapDispatchToProps = (dispatch) => ({\n});\n// export default withStyles(styles)(Navbar);\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(Home);","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\n\nconst Styles = {\n  myPaper:{\n    margin: '20px 0px',\n    padding:'20px'\n  }\n\n}\n\nconst PostList = ({ posts}) =>  (\n    <div>\n        {posts.map( (post, i) => (\n        <Paper key={i} style={Styles.myPaper}>\n          <Typography  variant=\"h6\" component=\"h3\">\n          {post.title}  \n        \n          </Typography>\n        \n          <Typography component=\"p\">\n            {post.post_content}\n        \n            <h5> by: {post.username}</h5>\n            <h5> {moment(post.createdAt).calendar()}</h5>\n          </Typography>\n        </Paper>\n       ))}\n\n    </div>\n     \n      \n);\n\nexport default PostList;","import React, { Component } from 'react';\nimport PostList from './PostList';\nimport Axios from '../Axios';\nimport {connect} from 'react-redux';\nimport { withRouter, Redirect} from 'react-router-dom';\nconst Styles = {\n    myPaper:{\n      margin: '20px 0px',\n      padding:'20px'\n    }\n    , \n    wrapper:{\n      padding:'0px 60px'\n    }\n}\nclass Posts extends Component {\n   state = {\n      posts: [],\n      loading: true,\n    }\n  \n  getPosts = () => {\n    Axios.get(process.env.REACT_APP_GET_POSTS)\n    .then( (res) => {\n       this.setState({\n          posts: res.data,\n          loading: false\n        })\n    })\n    // console.log(this.state.posts);\n  }\n  componentWillMount(){\n    this.getPosts();\n  }\n  render() {\n    const {loading, posts} = this.state;\n    if (!this.props.isAuthenticated) {\n      return (<Redirect to='/signIn' />);\n    }\n    if(loading){\n      return \"loading...\"\n    }\n    return (\n      <div className=\"App\" style={Styles.wrapper}>\n        <h1> Posts </h1>\n        <PostList posts={posts}/>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.user.isAuthenticated\n})\nconst mapDispatchToProps = (dispatch) => ({\n  // newPost: (post) => dispatch(newPost(post))\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Posts));","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nconst Styles = {\n    myPaper:{\n      margin: '20px 0px',\n      padding:'20px'\n    }\n    , \n    wrapper:{\n      padding:'0px 60px'\n    }\n}\nclass Users extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      users: [],\n      loading: true,\n    }\n  }\n  getUsers = async () => {\n    const url = await fetch('/api/users')\n    const json = await url.json();\n    this.setState({\n      users: json,\n      loading: false\n    })\n    console.log(this.state.users);\n  }\n  componentWillMount(){\n    this.getUsers();\n  }\n  render() {\n    const {loading, users} = this.state;\n    if(loading){\n      return \"loading...\"\n    }\n    return (\n      <div className=\"App\" style={Styles.wrapper}>\n        <h1> Welcome</h1>\n        {users.map( (user, i) => (\n        <Paper key={i} style={Styles.myPaper}>\n          <Typography  variant=\"h6\" component=\"h3\">\n            {user.username}  \n          </Typography>\n          <Typography component=\"p\">\n            {user.email}\n          </Typography>\n        </Paper>\n        ))}\n      </div>\n    );\n  }\n}\nexport default Users;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {Redirect} from 'react-router-dom';\nconst Styles = {\n    myPaper:{\n      margin: '20px 0px',\n      padding:'20px'\n    }\n    , \n    wrapper:{\n      padding:'0px 60px'\n    }\n}\nclass Dashboard extends Component {\n  state = { \n      first_name: '',\n      last_name: '',\n      email: '',\n      username: '',\n      password: '',\n      isLoading: true,\n      deleted: false,\n      error: false,\n    }\n  \n  render() {\n    // if (!this.props.isAuthenticated) {\n    //   return (<Redirect to='/signIn' />);\n    // }\n    return (\n      <div className=\"App\" style={Styles.wrapper}>\n        <h1> Welcome</h1>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.user.isAuthenticated,\n})\n// export default withStyles(styles)(Navbar);\nexport default compose(connect(mapStateToProps, null))(Dashboard);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nconst loading = {\n  margin: '1em',\n  fontSize: '24px',\n};\n\nconst title = {\n  pageTitle: 'Update Password Screen',\n};\n\nclass updatePassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      loadingUser: false,\n      updated: false,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loadingUser: true });\n\n    let accessString = localStorage.getItem('JWT');\n    if (accessString === null) {\n      this.setState({\n        loadingUser: false,\n        error: true,\n      });\n    } else {\n      axios\n        .get('/api/users/findUser', {\n          params: {\n            username: this.props.match.params.username,\n          },\n          headers: { Authorization: `JWT ${accessString}` },\n        })\n        .then(response => {\n          // console.log(response.data);\n          this.setState({\n            loadingUser: false,\n            username: response.data.username,\n            password: response.data.password,\n            error: false,\n          });\n        })\n        .catch(error => {\n          console.log(error.response.data);\n          this.setState({\n            loadingUser: false,\n            error: true,\n          });\n        });\n    }\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  updatePassword = e => {\n    let accessString = localStorage.getItem('JWT');\n    if (accessString === null) {\n      this.setState({\n        loadingUser: false,\n        error: true,\n      });\n    } else {\n      e.preventDefault();\n      axios\n        .put(\n          '/api/users/updatePassword',\n          {\n            username: this.state.username,\n            password: this.state.password,\n          },\n          {\n            headers: { Authorization: `JWT ${accessString}` },\n          },\n        )\n        .then(response => {\n          if (response.data.message === 'password updated') {\n            this.setState({\n              updated: true,\n              error: false,\n              loadingUser: false,\n            });\n          }\n        })\n        .catch(error => {\n          console.log(error.response.data);\n          this.setState({\n            updated: false,\n            error: true,\n            loadingUser: false,\n          });\n        });\n    }\n  };\n\n  render() {\n    const { username, password, updated, error, loadingUser } = this.state;\n\n    if (error) {\n      return (\n        <div>\n          <AppBar  title={title} />\n          <p style={loading}>\n            There was a problem accessing your data. Please go login again.\n          </p>\n       \n        </div>\n      );\n    } else if (loadingUser !== false) {\n      return (\n        <div>\n          <AppBar  title={title} />\n          <p style={loading}>Loading user data...</p>\n        </div>\n      );\n    } else if (loadingUser === false && updated === true) {\n      return <Redirect to={'/dashboard'} />;\n    } else if (loadingUser === false) {\n      return (\n        <div>\n          <AppBar  title={title} />\n          <form className=\"profile-form\" onSubmit={this.updatePassword}>\n            <TextField\n              id=\"password\"\n              label=\"password\"\n              value={password}\n              onChange={this.handleChange('password')}\n              type=\"password\"\n            />\n        <Button  variant=\"outlined\" type=\"submit\">\n            Save Changes\n         </Button>\n          </form>\n      \n        </div>\n      );\n    }\n  }\n}\n\nexport default updatePassword;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { updatePass, Reset} from '../../actions';\nconst loading = {\n  margin: '1em',\n  fontSize: '24px',\n};\n\nconst title = {\n  pageTitle: 'Password Reset Screen',\n};\nconst Styles = {\n  myPaper: {\n      margin: '20px 0px',\n      padding: '20px'\n  },\n  wrapper: {\n      padding: '0px 60px'\n  },\n\n  textF: {\n      width: '500px'\n  }\n\n}\n\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      update: false,\n      isLoading: true,\n      error: false,\n    };\n  }\n\nasync componentDidMount() {\n\n  // this.props.Reset();\n    await axios\n      .get('/api/users/reset', {\n        params: {\n          resetPasswordToken: this.props.match.params.token,\n        },\n      })\n      .then(response => {\n        console.log(response);\n        if (response.data.message === 'password reset link a-ok') {\n          this.setState({\n            username: response.data.username,\n            update: false,\n            isLoading: false,\n            error: false,\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error.response.data);\n        this.setState({\n          update: false,\n          isLoading: false,\n          error: true,\n        });\n      });\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  updatePassword = e => {\n    e.preventDefault();\n    const {username, password} = this.state;\n\n    const creds = {\n      username, password\n    }\n\n  \n    this.props.updatePass(creds);\n    \n   \n   \n    // axios\n    //   .put('/api/users/updatePasswordViaEmail', {\n    //     username: this.state.username,\n    //     password: this.state.password,\n    //   })\n    //   .then(response => {\n    //     console.log(response.data);\n    //     if (response.data.message === 'password updated') {\n    //       this.setState({\n    //         updated: true,\n    //         error: false,\n    //       });\n    //     } else {\n    //       this.setState({\n    //         updated: false,\n    //         error: true,\n    //       });\n    //     }\n    //   })\n    //   .catch(error => {\n    //     console.log(error.data);\n    //   });\n  };\n\n  render() {\n    const { password, error, isLoading, updated } = this.state;\n\n  \n      return (\n        <div className=\"App\" style={Styles.wrapper}>\n         <h1> Update Password</h1>\n\n         {this.props.updated && (\n            <div>\n              <p>\n              {this.props.updated}\n              </p>\n            \n            </div>\n          )}\n     \n          <form className=\"password-form\" onSubmit={this.updatePassword}>\n            <TextField\n              id=\"Password\"\n              label=\"Password\"\n              style={Styles.textF}\n              onChange={this.handleChange('password')}\n              value={password}\n              type=\"password\"\n            />\n          <br></br>\n          <br></br>\n          <Button color=\"primary\" variant=\"outlined\" type=\"submit\">\n            Update Password\n         </Button>\n          </form>\n\n         \n        </div>\n      );\n    }\n  }\n\n\nconst mapStateToProps = (state) => ({\n\n  updated: state.account.update,\n  isLoading: state.account.isLoading\n\n\n\n})\nconst mapDispatchToProps = (dispatch) => ({\n  Reset: () => dispatch(Reset()),\n  updatePass: (creds) => dispatch(updatePass(creds))\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ResetPassword));","import React from 'react';\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport signUp from '../auth/signUp';\nimport signIn from '../auth/signIn';\nimport Post from '../Post';\nimport Forgot from '../account/Forgot';\nimport Home from '../Home';\nimport Posts from '../Posts';\nimport Users from '../account/Users';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core';\nimport Dashboard from '../account/dashBoard';\nimport {connect} from 'react-redux';\nimport {createBrowserHistory} from 'history';\nimport PropTypes from 'prop-types';\nimport {compose} from 'redux';\nimport Axios from '../../Axios';\nimport updatePassword from '../account/updatePassword';\nimport ResetPassword from '../account/ResetPassword';\nimport ourStyles from '../../styles/ourStyles';\nexport const history = createBrowserHistory({forceRefresh: true});\n\n\nconst logout = (e) => {\n    e.preventDefault()\n    Axios.get(process.env.REACT_APP_LOGOUT, {withCredentials: true})\n        .then(res => {\n            // console.log(res);\n            if (res.status === 200) {\n                localStorage.removeItem('auth')\n                localStorage.removeItem('myAuth')\n                history.push('/')\n            }\n        })\n        .catch(err => {\n        //     // their will be an inevitable error, so you would need this for it to work\n            localStorage.removeItem('auth')\n             localStorage.removeItem('myAuth')\n            history.push('/')\n         })\n}\n\nconst Navbar = ({classes, isAuthenticated}) => (\n\n    <Router history={history}>\n\n        <div className={classes.navRoot}>\n\n            <AppBar position=\"static\" className={classes.navbar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        Express Seqeuelize App\n                    </Typography>\n\n                    <Typography classcolor=\"inherit\" className={classes.rightt}>\n\n                        {!isAuthenticated && (\n\n                            <Button>\n                                <Link to=\"/\" className={classes.rightToolbar}>\n                                    Home\n                                </Link>\n                            </Button>\n\n                        )}\n                        {isAuthenticated && (\n                            <Button>\n                                <Link className={classes.rightToolbar} to=\"/posts\">\n                                    Posts\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {!isAuthenticated && (\n\n                            <Button>\n                                <Link to=\"/signUp\" className={classes.rightToolbar}>\n                                    Sign Up\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {!isAuthenticated && (\n\n                            <Button>\n                                <Link to=\"/signIn\" className={classes.rightToolbar}>\n                                    Sign In\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {isAuthenticated && (\n                            <Button>\n                                <Link className={classes.rightToolbar} to=\"/Post\">\n                                    New Post\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {isAuthenticated && (\n                            <Button>\n                                <Link to=\"/dashboard\" className={classes.rightToolbar}>\n                                    Dashboard\n                                </Link>\n                            </Button>\n\n                        )}\n\n                        {isAuthenticated && (\n                            <Button onClick={logout}>\n\n                                LogOut\n\n                            </Button>\n                        )}\n\n                    </Typography>\n\n                </Toolbar>\n            </AppBar>\n\n            <Route exact path=\"/signUp\" component={signUp}/>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/signIn\" component={signIn}/>\n            <Route exact path=\"/Post\" component={Post}/>\n            <Route exact path=\"/Posts\" component={Posts}/>\n            <Route path=\"/Forgot\" component={Forgot}/>\n            <Route path=\"/users\" component={Users}/>\n            <Route exact path=\"/logout\"/>\n            <Route exact path=\"/dashboard\" component={Dashboard}/>\n            <Route path=\"/test\"/>\n            <Route path=\"/reset/:token\" component={ResetPassword}/>\n            <Route exact path=\"/updatePassword/:username\" component={updatePassword}/>\n        </div>\n    </Router>\n\n);\n\nconst mapStateToProps = (state) => ({\n    token: state.user.getToken, githubAuth: state.user.githubAuth,\n    // owl: state.user.owl,\n    isAuthenticated: state.user.isAuthenticated\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    //   logIn: (user) => dispatch(logIn(user))\n\n});\n\nNavbar.propTypes = {\n    isAuthenticatd: PropTypes.string\n\n}\n\n// export default withStyles(styles)(Navbar);\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(Navbar);","import React, { Component } from 'react';\n// import axios from 'axios';\nimport Navbar from './components/layout/Navbar';\nimport { withStyles } from '@material-ui/core/styles';\nimport {compose} from 'redux';\nimport { connect } from 'react-redux';\nimport { getUser, setCurrentUser} from './actions/';\nimport setAuthToken from './setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport ourStyles from './styles/ourStyles';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: \"\",\n      isAuthenticated: false,\n    }\n}\ncomponentWillMount(){\n  if (localStorage.auth != null) {\n    // Set auth token header auth\n    setAuthToken(localStorage.auth);\n    const token = localStorage.getItem('auth');\n    // // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // console.log(decoded);\n    // // Set user and isAuthenticated\n    this.props.setCurrentUser(decoded);\n  }\n    // this.props.getUser();\n    // console.log(this.props.owl);\n}\n  render() {\n    const { classes, isAuthenticated } = this.props;\n    return (\n      <div className=\"App\">\n        <Navbar />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.user.isAuthenticated,\n  owl: state.user.owl\n})\nconst mapDispatchToProps = (dispatch) => ({\n  getUser: () => dispatch (getUser()),\n  setCurrentUser: () => dispatch( setCurrentUser()),\n});\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(ourStyles))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_USER,  GET_CURRENT_USER, GET_USER,  REG_SUC, REG_FAIL, LOG_FAIL} from '../actions/';\n\n\nconst initialState = {\n    authError: null,\n    isAuthenticated:localStorage.getItem('auth'),\n    githubAuth:localStorage.getItem('gitAuth'),\n    token: null,\n    user: [],\n    owl:localStorage.getItem('myAuth'),\n    redirectPath: null\n    \n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER:\n        console.log(action.payload);\n            return ({\n                ...state,\n                user:action.user,\n                token: action.payload,\n                isAuthenticated:action.isAuthenticated\n            });\n        case LOG_FAIL:\n            return({\n                ...state,\n                authError:action.err.response.data \n            });\n        \n        case GET_USER:\n            return({\n                ...state,\n      \n            });  \n        case GET_CURRENT_USER:\n            return({\n                ...state,\n                owl: action.data.owl \n            \n            })\n        case REG_SUC:\n            return({\n                ...state,\n                user:action.user,\n                token: action.payload\n            });\n        case REG_FAIL:\n            return({\n                ...state,\n                authError:action.err.response.data\n            });\n\n    \n        default:\n            return state\n    }\n}","import { POST_FAIL, POST_SUCC} from '../actions/';\n\nconst initialState = {\n    post: [],\n    postError: null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case POST_SUCC:\n            return ({\n                ...state,\n                post:action.post\n            });\n\n        case POST_FAIL:\n            return({\n                ...state,\n                postError: action.err.response.data\n            })\n  \n        default:\n            return state\n    }\n}","import {FORGOT, RESET, RESET_FAIL,UPDATEPASS, UPDATEPASS_FAIL,  FORGOT_ERR } from '../actions/';\nconst initialState = {\n    showError: false,\n    messageFromServer: null,\n    showNullError:null,\n    username: null,\n    update: null,\n    isLoading: false,\n    error: false,\n    errorMessage: null\n}\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case FORGOT:\n            return ({\n                ...state,\n                showError:false,\n                messageFromServer:'recovery email sent'\n            });\n        case FORGOT_ERR:\n            return({\n                ...state,\n                showError: true,\n                messageFromServer: '',\n                showNullError: false,\n            });\n        case RESET:\n            return({\n                ...state,\n                username:action.creds.username,\n                update: false,\n                isLoading: false,\n                error: false,\n            });\n        case RESET_FAIL:\n            return({\n                ...state,\n                update: false,\n                isLoading: false,\n                error: true,\n            })\n        case UPDATEPASS:\n            return({\n                ...state,\n                update: 'Your password has been successfully reset, please try logging in again',\n                error: false\n            });\n        case UPDATEPASS_FAIL:\n            return({\n                ...state, \n                update: 'Please Enter An Email' ,\n                error: true,\n            })\n        default:\n            return state\n    }\n}","import authReducer from './users';\nimport postReducer from './posts';\nimport accountReducer from './account';\nimport { combineReducers } from 'redux';\n\n\nconst rootReducer = combineReducers({\n    user: authReducer,\n    post: postReducer,\n    account: accountReducer\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { Provider } from 'react-redux';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n// import indigo from '@material-ui/core/colors/indigo';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n        light: '#757ce8',\n        main: '#7986cb',\n    },\n    secondary: {\n      main: '#9fa8da',\n    },\n  },\n});\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\n\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(\n<Provider store={store}>   \n    <Router>\n        <MuiThemeProvider theme = {theme}>\n            <App />\n        </MuiThemeProvider>\n    </Router>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}